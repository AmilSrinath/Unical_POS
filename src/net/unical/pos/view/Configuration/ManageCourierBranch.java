/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package net.unical.pos.view.Configuration;

import net.unical.pos.view.Inquiry.*;
import java.awt.Dimension;
import java.sql.Timestamp;
import net.unical.pos.view.Payment.*;
import net.unical.pos.view.OrderFilter.*;
import java.text.DateFormat;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.unical.pos.view.home.Dashboard;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.unical.pos.controller.DeliveryOrderController;
import net.unical.pos.controller.PaymentTypesController;
import net.unical.pos.dto.PaymentTypeDto;
import net.unical.pos.log.Log;
import net.unical.pos.model.CourierBranchModel;
import net.unical.pos.model.CourierCompanyModel;
import net.unical.pos.model.DeliveryOrder;
import net.unical.pos.model.DeliveryOrderAmounts;
import net.unical.pos.model.InquiryModel;
import net.unical.pos.model.ResonModel;
import net.unical.pos.repository.impl.CourierBranchRepositoryImpl;
import net.unical.pos.repository.impl.CourierCompanyRepositoryImpl;
import net.unical.pos.repository.impl.DeliveryOrderRepositoryImpl;
import net.unical.pos.repository.impl.InquiryRepositoryImpl;
import net.unical.pos.repository.impl.PaymentRepositoryImpl;
import net.unical.pos.repository.impl.ResonRepositoryImpl;
import net.unical.pos.view.deliveryOrders.DeliveryOrders;

/**
 *
 * @author apple
 */
public class ManageCourierBranch extends JInternalFrame {
    private CourierBranchRepositoryImpl courierBranchRepositoryImpl;
    private CourierCompanyRepositoryImpl courierCompanyRepositoryImpl;

    /**
     * Creates new form OrderFilter
     */
    public ManageCourierBranch() {
        initComponents();
        setTitle("Manage Courier Branch");
        setClosable(true);
        setMaximizable(true);
        setIconifiable(true);
        setResizable(true);
        pack();
        desktopPane = new javax.swing.JDesktopPane();
    }

    public ManageCourierBranch(Dashboard dashboard) {
        this();
        this.courierBranchRepositoryImpl = new CourierBranchRepositoryImpl();
        this.courierCompanyRepositoryImpl = new CourierCompanyRepositoryImpl();
        
        getAllCourierBranch();
        loadDataCmbCompany();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        InquiryOptions = new javax.swing.JDialog();
        btnPaid = new javax.swing.JButton();
        btnNotPaid = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        resonTable = new org.jdesktop.swingx.JXTable();
        jPanel4 = new javax.swing.JPanel();
        btnAddBranch = new javax.swing.JButton();
        txtBranchName = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        cmbCompany = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();

        InquiryOptions.setAlwaysOnTop(true);
        InquiryOptions.setResizable(false);

        btnPaid.setBackground(new java.awt.Color(51, 153, 0));
        btnPaid.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnPaid.setForeground(new java.awt.Color(255, 255, 255));
        btnPaid.setText("Done");
        btnPaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaidActionPerformed(evt);
            }
        });

        btnNotPaid.setBackground(new java.awt.Color(255, 0, 51));
        btnNotPaid.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNotPaid.setForeground(new java.awt.Color(255, 255, 255));
        btnNotPaid.setText("Not Done");
        btnNotPaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNotPaidActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setText("Action");

        javax.swing.GroupLayout InquiryOptionsLayout = new javax.swing.GroupLayout(InquiryOptions.getContentPane());
        InquiryOptions.getContentPane().setLayout(InquiryOptionsLayout);
        InquiryOptionsLayout.setHorizontalGroup(
            InquiryOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InquiryOptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNotPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InquiryOptionsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(97, 97, 97))
        );
        InquiryOptionsLayout.setVerticalGroup(
            InquiryOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InquiryOptionsLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(InquiryOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnPaid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(btnNotPaid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        resonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Branch Name", "Contact", "Company"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resonTable.setEditable(false);
        resonTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resonTableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                resonTableMousePressed(evt);
            }
        });
        resonTable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                resonTablePropertyChange(evt);
            }
        });
        resonTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                resonTableKeyReleased(evt);
            }
        });
        jScrollPane6.setViewportView(resonTable);
        if (resonTable.getColumnModel().getColumnCount() > 0) {
            resonTable.getColumnModel().getColumn(0).setMinWidth(5);
            resonTable.getColumnModel().getColumn(0).setMaxWidth(5);
        }
        if (resonTable.getColumnModel().getColumnCount() > 0) {
            resonTable.getColumnModel().getColumn(0).setMinWidth(0);
            resonTable.getColumnModel().getColumn(0).setPreferredWidth(0);
            resonTable.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        jPanel4.setBackground(new java.awt.Color(0, 102, 153));

        btnAddBranch.setText("Add Branch");
        btnAddBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBranchActionPerformed(evt);
            }
        });

        txtBranchName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBranchNameActionPerformed(evt);
            }
        });
        txtBranchName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBranchNameKeyReleased(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Branch Name");

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Contact");

        txtContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContactActionPerformed(evt);
            }
        });
        txtContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtContactKeyReleased(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Select Company");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(txtBranchName, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(18, 18, 18)
                        .addComponent(cmbCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 742, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(118, 118, 118)
                .addComponent(btnAddBranch)
                .addContainerGap(357, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(txtBranchName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(btnAddBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane6))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private Integer selectedBranchId = null;
    
    private void btnAddBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBranchActionPerformed
        String branchNameText = txtBranchName.getText();
        String branchContactText = txtContact.getText();
        String companyText = cmbCompany.getSelectedItem().toString();

        if (branchNameText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a branch name.");
            return;
        }
        
        if (branchContactText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a branch contact.");
            return;
        }
        
        if (companyText == "Select Company") {
            JOptionPane.showMessageDialog(this, "Please select a company.");
            return;
        }

        if (selectedBranchId == null) {
            // Add
            Timestamp now = new Timestamp(System.currentTimeMillis());
            
            CourierBranchModel courierBranchModel = new CourierBranchModel();
            courierBranchModel.setBranchName(branchNameText);
            courierBranchModel.setCompanyName(companyText);
            courierBranchModel.setBranchContact(branchContactText);
            courierBranchModel.setUserId(1);
            courierBranchModel.setStatus(1);
            courierBranchModel.setCreateDate(now);
            courierBranchModel.setEditedDate(now);

            courierBranchRepositoryImpl.saveCourierCompany(courierBranchModel);
        } else {
            // Update
            courierBranchRepositoryImpl.updateCourierCompany(selectedBranchId, branchNameText,branchContactText,companyText);
            btnAddBranch.setText("Add Branch");
            selectedBranchId = null;
        }

        txtBranchName.setText(""); // Clear input
        txtContact.setText(""); // Clear input
        cmbCompany.setSelectedIndex(0);
        getAllCourierBranch();  // Reload table
    }//GEN-LAST:event_btnAddBranchActionPerformed

    public void loadDataCmbCompany() {
        cmbCompany.removeAllItems();
        cmbCompany.addItem("Select Company");
        List<CourierCompanyModel> companyModels = courierCompanyRepositoryImpl.getAllCourierCompanies();
        for (CourierCompanyModel companyModel : companyModels) {
            cmbCompany.addItem(companyModel.getCompanyName());
        }
    }
    
    public void getAllCourierBranch() {
        DefaultTableModel dtm = (DefaultTableModel) resonTable.getModel();
        dtm.setRowCount(0);

        List<CourierBranchModel> courierBranchModels = courierBranchRepositoryImpl.getAllCourierBranchs();
        for (CourierBranchModel model : courierBranchModels) {
            Object[] row = {
                model.getBranchId(),
                model.getBranchName(),
                model.getBranchContact(),
                model.getCompanyName()
            };
            dtm.addRow(row);
        }
        resonTable.setModel(dtm);
    }
    
    private void resonTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_resonTableKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_resonTableKeyReleased

    private void resonTablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_resonTablePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_resonTablePropertyChange

    private void resonTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resonTableMousePressed
        if (evt.getClickCount() == 2) {
            int selectedRow = resonTable.getSelectedRow();
            if (selectedRow != -1) {
                selectedBranchId = Integer.parseInt(resonTable.getValueAt(selectedRow, 0).toString()); // Assuming reson_id is the 1st column
                txtBranchName.setText(resonTable.getValueAt(selectedRow, 1).toString());
                txtContact.setText(resonTable.getValueAt(selectedRow, 2).toString());
                cmbCompany.setSelectedItem(resonTable.getValueAt(selectedRow, 3).toString());
                btnAddBranch.setText("Update Branch");
            }
        }
    }//GEN-LAST:event_resonTableMousePressed

    private void resonTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resonTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_resonTableMouseClicked

    private void txtBranchNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBranchNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBranchNameActionPerformed

    private void txtBranchNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBranchNameKeyReleased
        
    }//GEN-LAST:event_txtBranchNameKeyReleased

    private void btnPaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaidActionPerformed
        
    }//GEN-LAST:event_btnPaidActionPerformed

    private void btnNotPaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNotPaidActionPerformed
        
    }//GEN-LAST:event_btnNotPaidActionPerformed

    private void txtContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContactActionPerformed

    private void txtContactKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContactKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageCourierBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageCourierBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageCourierBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageCourierBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageCourierBranch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog InquiryOptions;
    private javax.swing.JButton btnAddBranch;
    private javax.swing.JButton btnNotPaid;
    private javax.swing.JButton btnPaid;
    private javax.swing.JComboBox<String> cmbCompany;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane6;
    private org.jdesktop.swingx.JXTable resonTable;
    private javax.swing.JTextField txtBranchName;
    private javax.swing.JTextField txtContact;
    // End of variables declaration//GEN-END:variables

    public javax.swing.JDesktopPane desktopPane;

}
