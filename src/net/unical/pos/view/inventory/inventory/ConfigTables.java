/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.unical.pos.view.inventory.inventory;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import net.unical.pos.configurations.ConfigTimer;
import net.unical.pos.configurations.Configurations;
import net.unical.pos.controller.ConfigTabalesController;
import net.unical.pos.controller.MainTableLocationController;
import net.unical.pos.controller.SubTableLocationController;
import net.unical.pos.dto.ConfigTableDetailsDto;
import net.unical.pos.dto.ConfigTablesDto;
import net.unical.pos.dto.MainTableLocationDetailsDto;
import net.unical.pos.dto.MainTableLocationDto;
import net.unical.pos.dto.SubTableLocationDto;
import net.unical.pos.view.home.Dashboard;
import org.apache.commons.io.FileUtils;
import org.jdesktop.swingx.JXButton;

/**
 *
 * @author Sanjuka
 */
public class ConfigTables extends javax.swing.JInternalFrame {

    String destFileName = ""; // full local file path
    String selectedFilePath = ""; // only server folder stracture file path
    String absoluteFilePath = "";
    boolean isLogoImageChanged = false;
    
    MainTableLocationController mainTableLocationController=new MainTableLocationController();
    SubTableLocationController subTableLocationController=new SubTableLocationController();
    ConfigTabalesController configTabalesController=new ConfigTabalesController();
    
    private ArrayList<Integer> mainTableIds=new ArrayList<>();
    private ArrayList<Integer> subTableIds=new ArrayList<>();
    private boolean update=false;
    private ConfigTimer configTimer;
    Dashboard dashboard;
    /**
     * Creates new form ConfigTables
     */
    public ConfigTables(Dashboard dashboard) {
        initComponents();
        
        this.dashboard=dashboard;
        this.mainTableLocationController=new MainTableLocationController();
        this.subTableLocationController=new SubTableLocationController();
        this.configTabalesController=new ConfigTabalesController();
        
        loadMainTables();
        loadTableStracture();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        tableChanger = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jXTextField1 = new org.jdesktop.swingx.JXTextField();
        jLabel6 = new javax.swing.JLabel();
        jXButton1 = new org.jdesktop.swingx.JXButton();
        singleTableIconLbl = new javax.swing.JLabel();
        jXButton2 = new org.jdesktop.swingx.JXButton();
        jXButton3 = new org.jdesktop.swingx.JXButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mainLocationCmb = new javax.swing.JComboBox<>();
        subLocationCmb = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        prefixTxt = new org.jdesktop.swingx.JXTextField();
        jLabel4 = new javax.swing.JLabel();
        noOfTablesTxt = new org.jdesktop.swingx.JXTextField();
        jLabel11 = new javax.swing.JLabel();
        statusBox = new javax.swing.JCheckBox();
        JXButton1 = new org.jdesktop.swingx.JXButton();
        iconLbl = new javax.swing.JLabel();
        saveBtn = new org.jdesktop.swingx.JXButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();

        tableChanger.setTitle("Change Single Table");

        tableChanger.setAlwaysOnTop(true);

        tableChanger.setMinimumSize(new java.awt.Dimension(400, 400));

        tableChanger.setResizable(false);

        tableChanger.setSize(new java.awt.Dimension(400, 440));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Name");

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Image");

        jXButton1.setBackground(new java.awt.Color(0, 102, 153));
        jXButton1.setForeground(new java.awt.Color(255, 255, 255));
        jXButton1.setText("Choose");
        jXButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton1ActionPerformed(evt);
            }
        });

        singleTableIconLbl.setBorder(javax.swing.BorderFactory.createTitledBorder("Tables Image"));

        jXButton2.setForeground(new java.awt.Color(255, 255, 255));
        jXButton2.setText("Close");
        jXButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton2ActionPerformed(evt);
            }
        });

        jXButton3.setBackground(new java.awt.Color(0, 102, 153));
        jXButton3.setForeground(new java.awt.Color(255, 255, 255));
        jXButton3.setText("Save");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jXTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(singleTableIconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jXButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jXButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(singleTableIconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jXButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jXButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addGap(3, 3, 3)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout tableChangerLayout = new javax.swing.GroupLayout(tableChanger.getContentPane());
        tableChanger.getContentPane().setLayout(tableChangerLayout);
        tableChangerLayout.setHorizontalGroup(
            tableChangerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tableChangerLayout.setVerticalGroup(
            tableChangerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add / Edit Table Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 102, 153))); // NOI18N

        jLabel1.setText("Main Location");

        jLabel2.setText("Sub Location");

        mainLocationCmb.setBackground(new java.awt.Color(255, 255, 255));
        mainLocationCmb.setForeground(new java.awt.Color(0, 0, 0));
        mainLocationCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainLocationCmbActionPerformed(evt);
            }
        });

        subLocationCmb.setBackground(new java.awt.Color(255, 255, 255));
        subLocationCmb.setForeground(new java.awt.Color(0, 0, 0));

        jLabel3.setText("Table Code Prefix");

        prefixTxt.setBackground(new java.awt.Color(255, 255, 255));
        prefixTxt.setForeground(new java.awt.Color(0, 0, 0));

        jLabel4.setText("No of tables");

        noOfTablesTxt.setBackground(new java.awt.Color(255, 255, 255));
        noOfTablesTxt.setForeground(new java.awt.Color(0, 0, 0));

        jLabel11.setText("Image");

        statusBox.setBackground(new java.awt.Color(255, 255, 255));
        statusBox.setForeground(new java.awt.Color(0, 0, 0));
        statusBox.setSelected(true);
        statusBox.setText("Is Active");

        JXButton1.setBackground(new java.awt.Color(0, 102, 153));
        JXButton1.setForeground(new java.awt.Color(255, 255, 255));
        JXButton1.setText("Choose");
        JXButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JXButton1ActionPerformed(evt);
            }
        });

        iconLbl.setBorder(javax.swing.BorderFactory.createTitledBorder("Tables Image"));

        saveBtn.setBackground(new java.awt.Color(0, 102, 153));
        saveBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        jLabel12.setBackground(new java.awt.Color(153, 0, 0));
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Reset");
        jLabel12.setOpaque(true);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(noOfTablesTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subLocationCmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mainLocationCmb, 0, 126, Short.MAX_VALUE)
                            .addComponent(prefixTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(iconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(statusBox, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainLocationCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subLocationCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(prefixTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(noOfTablesTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1)))
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mainLocationCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainLocationCmbActionPerformed
        try {
            subLocationCmb.removeAllItems();
            subTableIds.removeAll(subTableIds);
            String mainTableName=mainLocationCmb.getSelectedItem().toString();
            ArrayList<SubTableLocationDto> subTableLocationDtos=subTableLocationController.searchSubLocation(mainTableName);

            if(mainTableName!=null){
                if(subTableLocationDtos.size()==0){
                    subLocationCmb.addItem(null);
                }else{
                    for(SubTableLocationDto dto : subTableLocationDtos){
                        subLocationCmb.addItem(dto.getSubName());
                        subTableIds.add(dto.getSubTableLocationId());
                    }
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(ConfigTables.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mainLocationCmbActionPerformed

    private void JXButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JXButton1ActionPerformed
        FileFilter imageFilter = new FileNameExtensionFilter("Image Files", ImageIO.getReaderFileSuffixes());
        fileChooser.addChoosableFileFilter(imageFilter);

        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {

            File file = fileChooser.getSelectedFile();

            String file_name = file.toString();

            Date d = new Date();

            // select file type
            if (file_name.endsWith(".gif")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".gif";
            } else if (file_name.endsWith(".bmp")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".bmp";
            } else if (file_name.endsWith(".jpg")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".jpg";
            } else if (file_name.endsWith(".jpeg")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".jpeg";
            } else if (file_name.endsWith(".wbmp")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".wbmp";
            } else if (file_name.endsWith(".png")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".png";
            } else {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + file_name.substring(file_name.length() - 5, file_name.length());
            }

            selectedFilePath = "" + destFileName;

            destFileName = Dashboard.configValues.get(Configurations.SE_IMAGE_PATH.getConfigValue()) + "" + destFileName;
            File source = new File(file_name);
            File dest = new File(destFileName);
            absoluteFilePath = dest.getAbsolutePath();

            try {
                //FileUtils.copyDirectory(source, dest);
                FileUtils.copyFile(source, dest);
                // image uploaded. preview image
                try {
                    ImageIcon iconLogo = new ImageIcon(destFileName);
                    Image image = iconLogo.getImage(); // transform it
                    Image newimg = image.getScaledInstance(128, 128, java.awt.Image.SCALE_SMOOTH); // scale it the smooth way
                    iconLogo = new ImageIcon(newimg);  // transform it back
                    iconLbl.setIcon(iconLogo);
                } catch (Exception e) {
                    // if system cants find the db value or error set default in source code.
                    //                    URL iconURL = getClass().getResource("/com/eideastech/zligger/order/images/comapny_170.png");
                    //                    iconLbl.setIcon(new ImageIcon(iconURL));
                }
                iconLbl.setText(null);
                isLogoImageChanged = true;
            } catch (IOException ex) {
                // error occurred. alert the user
                JOptionPane.showMessageDialog(this, "Image loard fail. Please try a diffrent image. Information :" + ex, "Load Fail", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_JXButton1ActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed

        Integer activeStatus=0;
        int mainLocationIndex=mainLocationCmb.getSelectedIndex();
        int subLocationIndex=subLocationCmb.getSelectedIndex();
        
        Timestamp timestamp = new Timestamp(System.currentTimeMillis());
        
        ConfigTablesDto configTablesDto=new ConfigTablesDto(0,
            mainTableIds.get(mainLocationIndex),
            subTableIds.get(subLocationIndex),
            mainLocationCmb.getSelectedItem().toString(),
            subLocationCmb.getSelectedItem().toString(),
            prefixTxt.getText(),
            Integer.parseInt(noOfTablesTxt.getText()),
            selectedFilePath,
            activeStatus,
            dashboard.CREATED_USER_ID,
            1   
        );

        if(!update){
            try {
                boolean result=configTabalesController.saveTables(configTablesDto);
                if (result) {
//                    configTimer.setMessageTimer(true);
                } else {
                    //                   JOptionPane.showMessageDialog(this, "Failed to add the Category");
                }
            } catch (Exception ex) {
                Logger.getLogger(ConfigTables.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            try {
//                if(ItemTbl.getSelectedRow()==-1){
//                    return;
//                }

//                configTablesDto.setConfigTablesId((int) ItemTbl.getValueAt(ItemTbl.getSelectedRow(), 0));
                boolean result=configTabalesController.updateTables(configTablesDto);
                if (result) {
                    configTimer.setMessageTimer(true);
                } else {
                    //                     JOptionPane.showMessageDialog(this, "Update Fail");
                }

            } catch (Exception ex) {
                Logger.getLogger(ConfigTables.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        //                loadAllItems();
    }//GEN-LAST:event_saveBtnActionPerformed

    private void jXButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton1ActionPerformed
        FileFilter imageFilter = new FileNameExtensionFilter("Image Files", ImageIO.getReaderFileSuffixes());
        fileChooser.addChoosableFileFilter(imageFilter);

        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {

            File file = fileChooser.getSelectedFile();

            String file_name = file.toString();

            Date d = new Date();

            // select file type
            if (file_name.endsWith(".gif")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".gif";
            } else if (file_name.endsWith(".bmp")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".bmp";
            } else if (file_name.endsWith(".jpg")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".jpg";
            } else if (file_name.endsWith(".jpeg")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".jpeg";
            } else if (file_name.endsWith(".wbmp")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".wbmp";
            } else if (file_name.endsWith(".png")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".png";
            } else {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + file_name.substring(file_name.length() - 5, file_name.length());
            }

            selectedFilePath = "" + destFileName;

            destFileName = Dashboard.configValues.get(Configurations.SE_IMAGE_PATH.getConfigValue()) + "" + destFileName;
            File source = new File(file_name);
            File dest = new File(destFileName);
            absoluteFilePath = dest.getAbsolutePath();

            try {
                //FileUtils.copyDirectory(source, dest);
                FileUtils.copyFile(source, dest);
                // image uploaded. preview image
                try {
                    ImageIcon iconLogo = new ImageIcon(destFileName);
                    Image image = iconLogo.getImage(); // transform it
                    Image newimg = image.getScaledInstance(128, 128, java.awt.Image.SCALE_SMOOTH); // scale it the smooth way
                    iconLogo = new ImageIcon(newimg);  // transform it back
                    iconLbl.setIcon(iconLogo);
                } catch (Exception e) {
                    // if system cants find the db value or error set default in source code.
                    //                    URL iconURL = getClass().getResource("/com/eideastech/zligger/order/images/comapny_170.png");
                    //                    iconLbl.setIcon(new ImageIcon(iconURL));
                }
                singleTableIconLbl.setText(null);
                isLogoImageChanged = true;
            } catch (IOException ex) {
                // error occurred. alert the user
                JOptionPane.showMessageDialog(this, "Image loard fail. Please try a diffrent image. Information :" + ex, "Load Fail", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jXButton1ActionPerformed

    private void jXButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton2ActionPerformed
        tableChanger.dispose();
    }//GEN-LAST:event_jXButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ConfigTables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ConfigTables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ConfigTables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ConfigTables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ConfigTables().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton JXButton1;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel iconLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private org.jdesktop.swingx.JXButton jXButton1;
    private org.jdesktop.swingx.JXButton jXButton2;
    private org.jdesktop.swingx.JXButton jXButton3;
    private org.jdesktop.swingx.JXTextField jXTextField1;
    private javax.swing.JComboBox<String> mainLocationCmb;
    private org.jdesktop.swingx.JXTextField noOfTablesTxt;
    private org.jdesktop.swingx.JXTextField prefixTxt;
    private org.jdesktop.swingx.JXButton saveBtn;
    private javax.swing.JLabel singleTableIconLbl;
    private javax.swing.JCheckBox statusBox;
    private javax.swing.JComboBox<String> subLocationCmb;
    private javax.swing.JDialog tableChanger;
    // End of variables declaration//GEN-END:variables
    
    public void loadTableStracture() {

        try {
            ArrayList<MainTableLocationDto> mainTableLocationList =mainTableLocationController.getAllLocations();
            ArrayList<SubTableLocationDto> subLocationList = subTableLocationController.getAllSubLocations();
            ArrayList<ConfigTablesDto> configTablesList=configTabalesController.getAllLocations();
            ArrayList<ConfigTableDetailsDto> configTableDetalsList=configTabalesController.getAllLocationDetails();
            
            for(int i=0; i<mainTableLocationList.size(); i++){
                MainTableLocationDto mainTableLocationDto=mainTableLocationList.get(i);
                JTabbedPane mainTablePane = new JTabbedPane(JTabbedPane.TOP);
                
                for(int j=0; j<subLocationList.size(); j++){
                    SubTableLocationDto subTableLocationDto=subLocationList.get(j);
                    if(mainTableLocationDto.getMainTableLocationId()==subTableLocationDto.getMainTableLocationId()){
                        JTabbedPane subTabbedPane = new JTabbedPane(JTabbedPane.TOP);
                        
                        
                        
                        for(int s=0; s<configTablesList.size();s++){
                            ConfigTablesDto configTablesDto=configTablesList.get(s);
                            
                            if(configTablesDto.getSubTableLocationId()==subTableLocationDto.getSubTableLocationId()){
                                JPanel tablesPane = new JPanel();
                                tablesPane.setLayout(null);
                                tablesPane.setSize(WIDTH, HEIGHT);
                                tablesPane.setBackground(Color.WHITE);
                                
                                for(int t=0; t<configTableDetalsList.size();t++){
                                    ConfigTableDetailsDto configTableDetailsDto=configTableDetalsList.get(t);
                                    if(configTableDetailsDto.getConfigTablesId()==configTablesDto.getConfigTablesId()){
                                        JXButton tabeBt = new JXButton();
                                        tabeBt.setText(null);
                                        tabeBt.setSize(100, 100);
                                        tabeBt.setMargin(new Insets(0, 0, 0, 0));
                                        tabeBt.setFont(new Font("Tahoma", Font.BOLD, 13));
                                        
                                        int xx = (int) configTableDetailsDto.getWidth();
                                        int yy = (int) configTableDetailsDto.getHeight();
                                        

                                        URL refIconURL = getClass().getResource("/net/unical/pos/imagers/Tables/Webp.net-resizeimage.png");
                                        ImageIcon refIcon = new ImageIcon(refIconURL);
                                        tabeBt.setIcon(refIcon);

                                        tabeBt.setLocation(xx, yy);
                                        tabeBt.addActionListener((ActionEvent e) -> {
                                            tableChanger.setVisible(true);
                                            tableChanger.setLocationRelativeTo(null);
                                            tableChanger.repaint();
                                        });
                                        tablesPane.add(tabeBt);
                                        subTabbedPane.addTab("<html><body><table><tr><td height='28' width='100'><font size='4'>" + configTablesDto.getTableCodePrefix()+ "</font></td></tr></table></body></html>", tablesPane);
                                    }    
                                    
                                }
                                
                            }
                            
                        }

                        mainTablePane.addTab("<html><body><table><tr><td height='28' width='100'><font size='4'>" +subTableLocationDto.getSubName()+ "</font></td></tr></table></body></html>", subTabbedPane);
                    }
                }
                jTabbedPane1.addTab("<html><body><table><tr><td height='28' width='100'><font size='4'>" + mainTableLocationDto.getLocationName()+ "</font></td></tr></table></body></html>", mainTablePane);
                jTabbedPane1.setVisible(true);
            }
        } catch (Exception ex) {
            Logger.getLogger(ConfigTables.class.getName()).log(Level.SEVERE, null, ex);
        }
                    
    }
    
    private void loadMainTables() {
        try {
            ArrayList<MainTableLocationDto> allLocations=mainTableLocationController.getAllLocations();
        
            for(MainTableLocationDto dto: allLocations){
                mainLocationCmb.addItem(dto.getLocationName());
                mainTableIds.add(dto.getMainTableLocationId());   
                
            }
            
        } catch (Exception ex) {
            Logger.getLogger(SubCategory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
            
   
