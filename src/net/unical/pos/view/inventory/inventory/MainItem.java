/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.unical.pos.view.inventory.inventory;

import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import net.unical.pos.configurations.ConfigTimer;
import net.unical.pos.configurations.Configurations;
import net.unical.pos.controller.ItemRegistryController;
import net.unical.pos.controller.MainItemCategoryController;
import net.unical.pos.controller.MainItemController;
import net.unical.pos.controller.PrinterTypesController;
import net.unical.pos.controller.StoreTemplateController;
import net.unical.pos.controller.SubItemCategoryController;
import net.unical.pos.controller.UnitTypesController;
import net.unical.pos.dto.ItemUnitTypeDto;
import net.unical.pos.dto.MainItemDto;
import net.unical.pos.dto.MainItemCategoryDto;
import net.unical.pos.dto.MainPrinterTypesDto;
import net.unical.pos.dto.StoreTemplateDto;
import net.unical.pos.dto.SubItemCategoryDto;
import net.unical.pos.view.home.Dashboard;
import org.apache.commons.io.FileUtils;

/**
 *
 * @author Sanjuka
 */
public class MainItem extends javax.swing.JInternalFrame {

    /**
     * Creates new form MainItem
     */
    
    String destFileName = ""; // full local file path
    String selectedFilePath = ""; // only server folder stracture file path
    String absoluteFilePath = "";
    boolean isLogoImageChanged = false;
    
    Dashboard dashboard;
    private boolean update=false;
    private MainItemCategoryController mainItemCategoryController;
    private SubItemCategoryController subItemCategoryController;
    private MainItemController newItemController;
    private StoreTemplateController storeTemplateController;
    private PrinterTypesController printerTypesController;
    private UnitTypesController unitTypesController;
    private ItemRegistryController itemRegistryController;
    private ConfigTimer configTimer;
    
    private ArrayList<Integer> mainCategoryIds=new ArrayList<>();
    private ArrayList<Integer> subCategoryIds=new ArrayList<>();
    private ArrayList<Integer> mainCategoryTamplateIds=new ArrayList<>();
    private ArrayList<Integer> subCategoryTamplateIds=new ArrayList<>();
    private ArrayList<Integer> unitTypeIds=new ArrayList<>();
    private ArrayList<Integer> printerTypeIds=new ArrayList<>();
    ArrayList<StoreTemplateDto> storeTemplateDtos=new ArrayList<>();
    
    DefaultTableModel tableModel = null;
    
    boolean isEditItem=false;
    int idItem=0;
    
    public MainItem(boolean isEditItem,int idItem) {
        initComponents();
        this.dashboard=dashboard;
        this.mainItemCategoryController=new MainItemCategoryController();
        this.subItemCategoryController=new SubItemCategoryController();
        this.newItemController=new MainItemController();
        this.storeTemplateController=new StoreTemplateController();
        this.unitTypesController=new UnitTypesController();
        this.printerTypesController=new PrinterTypesController();
        this.itemRegistryController = new ItemRegistryController();
        this.configTimer=new ConfigTimer();
        
        this.isEditItem=isEditItem;
        this.idItem=idItem;
        
        tableModel = (DefaultTableModel) templateItemsTbl.getModel();
        
        loadMainCategory();
        loadUnitTypes();
        loadPrinterTypes();
        loadAllItems();
        loadMainCategoryTamplate();
        
        templateItemsTbl.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(templateItemsTbl.getSelectedRow()==-1){
                    update=false;
                    return;
                }
                
                qtyTxt.setText(templateItemsTbl.getValueAt(templateItemsTbl.getSelectedRow(), 3).toString());
            }
            
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        storeTamplate = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jXTextField2 = new org.jdesktop.swingx.JXTextField();
        jXTextField1 = new org.jdesktop.swingx.JXTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        subCategoryCmb = new javax.swing.JComboBox<>();
        mainCategoryCmb = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        templateNameTxt = new org.jdesktop.swingx.JXTextField();
        jXButton2 = new org.jdesktop.swingx.JXButton();
        jXButton7 = new org.jdesktop.swingx.JXButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        templateSingleItemTbl = new org.jdesktop.swingx.JXTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        templateItemsTbl = new org.jdesktop.swingx.JXTable();
        jXButton4 = new org.jdesktop.swingx.JXButton();
        jXButton5 = new org.jdesktop.swingx.JXButton();
        jXButton6 = new org.jdesktop.swingx.JXButton();
        qtyTxt = new org.jdesktop.swingx.JXTextField();
        jLabel18 = new javax.swing.JLabel();
        jXButton8 = new org.jdesktop.swingx.JXButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mainItemCategoryCmb = new javax.swing.JComboBox();
        subItemCategoryCmb = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        prefixTxt = new org.jdesktop.swingx.JXTextField();
        jLabel4 = new javax.swing.JLabel();
        itemCodeTxt = new org.jdesktop.swingx.JXTextField();
        jLabel5 = new javax.swing.JLabel();
        barCodeTxt = new org.jdesktop.swingx.JXTextField();
        jLabel6 = new javax.swing.JLabel();
        nameTxt = new org.jdesktop.swingx.JXTextField();
        jLabel7 = new javax.swing.JLabel();
        weightTxt = new org.jdesktop.swingx.JXTextField();
        jLabel8 = new javax.swing.JLabel();
        unitTypeCmb = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        printerTypeCmb = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        statusBox = new javax.swing.JCheckBox();
        grnBox = new javax.swing.JCheckBox();
        jXButton1 = new org.jdesktop.swingx.JXButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ItemTbl = new org.jdesktop.swingx.JXTable();
        iconLbl = new javax.swing.JLabel();
        saveBtn = new org.jdesktop.swingx.JXButton();
        jLabel12 = new javax.swing.JLabel();
        jXButton3 = new org.jdesktop.swingx.JXButton();
        sellingItemBox = new javax.swing.JCheckBox();
        jLabel19 = new javax.swing.JLabel();
        sellingPriceTxt = new org.jdesktop.swingx.JXTextField();

        storeTamplate.setTitle("Create a store tamplate");

        storeTamplate.setAlwaysOnTop(true);

        storeTamplate.setMinimumSize(new java.awt.Dimension(300, 300));

        storeTamplate.setResizable(false);

        storeTamplate.setSize(new java.awt.Dimension(760, 630));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Item Details", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(0, 102, 153))); // NOI18N

        jLabel16.setText("Item Code");

        jLabel17.setText("Item Name");

        jLabel15.setText("Sub Category");

        subCategoryCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subCategoryCmbActionPerformed(evt);
            }
        });

        mainCategoryCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainCategoryCmbActionPerformed(evt);
            }
        });

        jLabel14.setText("Main Category");

        jLabel13.setText("Tamplate Name");

        templateNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                templateNameTxtActionPerformed(evt);
            }
        });

        jXButton2.setBackground(new java.awt.Color(0, 102, 153));
        jXButton2.setForeground(new java.awt.Color(255, 255, 255));
        jXButton2.setText("Add Items");
        jXButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton2ActionPerformed(evt);
            }
        });

        jXButton7.setBackground(new java.awt.Color(0, 102, 153));
        jXButton7.setForeground(new java.awt.Color(255, 255, 255));
        jXButton7.setText("Get Items");
        jXButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton7ActionPerformed(evt);
            }
        });

        templateSingleItemTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Code", "Item Name", "Selling Price", "Selected"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(templateSingleItemTbl);
        if (templateSingleItemTbl.getColumnModel().getColumnCount() > 0) {
            templateSingleItemTbl.getColumnModel().getColumn(0).setMinWidth(0);
            templateSingleItemTbl.getColumnModel().getColumn(0).setPreferredWidth(0);
            templateSingleItemTbl.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(templateNameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mainCategoryCmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subCategoryCmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jXTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jXTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jXButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jXButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(templateNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mainCategoryCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subCategoryCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jXTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jXTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jXButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        templateItemsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Id", "Item Code", "Item Name", "Qty", "Selling Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(templateItemsTbl);
        if (templateItemsTbl.getColumnModel().getColumnCount() > 0) {
            templateItemsTbl.getColumnModel().getColumn(0).setMinWidth(0);
            templateItemsTbl.getColumnModel().getColumn(0).setPreferredWidth(0);
            templateItemsTbl.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        jXButton4.setBackground(new java.awt.Color(51, 51, 51));
        jXButton4.setForeground(new java.awt.Color(255, 255, 255));
        jXButton4.setText("Reset");

        jXButton5.setBackground(new java.awt.Color(204, 0, 0));
        jXButton5.setForeground(new java.awt.Color(255, 255, 255));
        jXButton5.setText("Close");

        jXButton6.setBackground(new java.awt.Color(0, 153, 0));
        jXButton6.setForeground(new java.awt.Color(255, 255, 255));
        jXButton6.setText("Create");
        jXButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton6ActionPerformed(evt);
            }
        });

        qtyTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyTxtActionPerformed(evt);
            }
        });

        jLabel18.setText("Qty");

        jXButton8.setBackground(new java.awt.Color(0, 102, 153));
        jXButton8.setForeground(new java.awt.Color(255, 255, 255));
        jXButton8.setText("Add");
        jXButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(qtyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jXButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jXButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jXButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jXButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(qtyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jXButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout storeTamplateLayout = new javax.swing.GroupLayout(storeTamplate.getContentPane());
        storeTamplate.getContentPane().setLayout(storeTamplateLayout);
        storeTamplateLayout.setHorizontalGroup(
            storeTamplateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        storeTamplateLayout.setVerticalGroup(
            storeTamplateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(0, 102, 153))); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add / Edit Item Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(0, 102, 153))); // NOI18N

        jLabel1.setText("Main Category");

        jLabel2.setText("Sub Category");

        mainItemCategoryCmb.setEditable(true);
        mainItemCategoryCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainItemCategoryCmbActionPerformed(evt);
            }
        });

        subItemCategoryCmb.setEditable(true);

        jLabel3.setText("Item Code Prefix");

        jLabel4.setText("Item Code");

        jLabel5.setText("Item BarCode");

        jLabel6.setText("Item Name");

        jLabel7.setText("Item Selling Price");

        jLabel8.setText("Unit Type");

        jLabel9.setText("Printer Type");

        jLabel10.setText("Store Template");

        jLabel11.setText("Image");

        statusBox.setBackground(new java.awt.Color(255, 255, 255));
        statusBox.setSelected(true);
        statusBox.setText("Is Active");

        grnBox.setBackground(new java.awt.Color(255, 255, 255));
        grnBox.setSelected(true);
        grnBox.setText("GRN");

        jXButton1.setBackground(new java.awt.Color(0, 102, 153));
        jXButton1.setForeground(new java.awt.Color(255, 255, 255));
        jXButton1.setText("Choose");
        jXButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton1ActionPerformed(evt);
            }
        });

        ItemTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Selling Price", "Unit Type", "Is Active"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ItemTbl);

        iconLbl.setBorder(javax.swing.BorderFactory.createTitledBorder("Image"));

        saveBtn.setBackground(new java.awt.Color(0, 102, 153));
        saveBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        jLabel12.setBackground(new java.awt.Color(153, 0, 0));
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Reset");
        jLabel12.setOpaque(true);

        jXButton3.setBackground(new java.awt.Color(51, 51, 51));
        jXButton3.setForeground(new java.awt.Color(204, 204, 204));
        jXButton3.setText("Create");
        jXButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton3ActionPerformed(evt);
            }
        });

        sellingItemBox.setBackground(new java.awt.Color(255, 255, 255));
        sellingItemBox.setSelected(true);
        sellingItemBox.setText("Selling Item");

        jLabel19.setText("Weight");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jXButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(446, 446, 446)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(weightTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(sellingPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(unitTypeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(barCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subItemCategoryCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mainItemCategoryCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prefixTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(printerTypeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(iconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(statusBox, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(grnBox, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sellingItemBox)))
                .addContainerGap(615, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainItemCategoryCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subItemCategoryCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prefixTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(barCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sellingPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unitTypeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(printerTypeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weightTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusBox)
                    .addComponent(grnBox)
                    .addComponent(sellingItemBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed

        Integer grnStatus=0;
        Integer activeStatus=0;
        Integer sellingItem=0;
        int mainCategoryIndex=mainItemCategoryCmb.getSelectedIndex();
        int subCategoryIndex=subItemCategoryCmb.getSelectedIndex();
                
        if(grnBox.isSelected()){
            grnStatus=1;
        }
        if(statusBox.isSelected()){
            activeStatus=1;
        }
        if(sellingItemBox.isSelected()){
            sellingItem=1;
        }
        
        
        MainItemDto itemDto=new MainItemDto(Integer.parseInt(itemCodeTxt.getText()),
                Integer.parseInt(barCodeTxt.getText()+""),
                mainCategoryIds.get(mainCategoryIndex), 
                subCategoryIds.get(subCategoryIndex),
                prefixTxt.getText(),
                prefixTxt.getText()+itemCodeTxt.getText(),
                0.00, /*discount*/
                nameTxt.getText(),
                unitTypeCmb.getSelectedItem().toString(),
                printerTypeCmb.getSelectedItem().toString(),
                0.00,/*cost price*/
                Double.parseDouble(sellingPriceTxt.getText()),
                selectedFilePath,
                activeStatus,
                grnStatus,
                sellingItem,
                dashboard.CREATED_USER_ID,
                Double.parseDouble(weightTxt.getText())
        );
        
        

        if(!update){
            try {
                System.out.println("Is save one");
                boolean result=newItemController.saveItem(itemDto);
                if (result) {
                    if(!storeTemplateDtos.isEmpty()){
                        for(StoreTemplateDto dto:storeTemplateDtos){
                            try {
                                StoreTemplateDto storeTemplateDto=new StoreTemplateDto(0,
                                        Integer.parseInt(itemCodeTxt.getText()),
                                        dto.getSubItemId(),
                                        dto.getTemplateName(),
                                        dto.getQty(),
                                        dto.getUserId(),
                                        1
                                );

                                storeTemplateController.saveTemplate(storeTemplateDto);
                            } catch (Exception ex) {
                                Logger.getLogger(MainItem.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                    JOptionPane.showMessageDialog(this, "Successfull!");
                } else {
                    //                   JOptionPane.showMessageDialog(this, "Failed to add the Category");
                }
            } catch (Exception ex) {
                Logger.getLogger(MainItem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            try {
                if(ItemTbl.getSelectedRow()==-1){
                    return;
                }

                itemDto.setItemId((int) ItemTbl.getValueAt(ItemTbl.getSelectedRow(), 0));
                boolean result=newItemController.updateItem(itemDto);
                if (result) {
                    JOptionPane.showMessageDialog(this, "Successfull!");
                } else {
                    //                     JOptionPane.showMessageDialog(this, "Update Fail");
                }

            } catch (Exception ex) {
                Logger.getLogger(MainItem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
                loadAllItems();
    }//GEN-LAST:event_saveBtnActionPerformed

    private void jXButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton1ActionPerformed
        FileFilter imageFilter = new FileNameExtensionFilter("Image Files", ImageIO.getReaderFileSuffixes());
        fileChooser.addChoosableFileFilter(imageFilter);
        
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            
            File file = fileChooser.getSelectedFile();

            String file_name = file.toString();

            Date d = new Date();
            
            // select file type 
            if (file_name.endsWith(".gif")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".gif";
            } else if (file_name.endsWith(".bmp")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".bmp";
            } else if (file_name.endsWith(".jpg")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".jpg";
            } else if (file_name.endsWith(".jpeg")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".jpeg";
            } else if (file_name.endsWith(".wbmp")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".wbmp";
            } else if (file_name.endsWith(".png")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".png";
            } else {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + file_name.substring(file_name.length() - 5, file_name.length());
            }
            
            selectedFilePath = "" + destFileName;

            destFileName = Dashboard.configValues.get(Configurations.SE_IMAGE_PATH.getConfigValue()) + "" + destFileName;
            File source = new File(file_name);
            File dest = new File(destFileName);
            absoluteFilePath = dest.getAbsolutePath();
            
            try {
                //FileUtils.copyDirectory(source, dest);
                FileUtils.copyFile(source, dest);
                // image uploaded. preview image
                try {
                    ImageIcon iconLogo = new ImageIcon(destFileName);
                    Image image = iconLogo.getImage(); // transform it 
                    Image newimg = image.getScaledInstance(128, 128, java.awt.Image.SCALE_SMOOTH); // scale it the smooth way  
                    iconLogo = new ImageIcon(newimg);  // transform it back                   
                    iconLbl.setIcon(iconLogo);
                } catch (Exception e) {
                    // if system cants find the db value or error set default in source code.
//                    URL iconURL = getClass().getResource("/com/eideastech/zligger/order/images/comapny_170.png");
//                    iconLbl.setIcon(new ImageIcon(iconURL));
                }
                iconLbl.setText(null);
                isLogoImageChanged = true;
            } catch (IOException ex) {
                // error occurred. alert the user
                JOptionPane.showMessageDialog(this, "Image loard fail. Please try a diffrent image. Information :" + ex, "Load Fail", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jXButton1ActionPerformed

    private void mainItemCategoryCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainItemCategoryCmbActionPerformed
        try {
            subItemCategoryCmb.removeAllItems();
            subCategoryIds.removeAll(subCategoryIds);
            String mainCategoryName=mainItemCategoryCmb.getSelectedItem().toString();
            ArrayList<SubItemCategoryDto> subItemCategoryDto=subItemCategoryController.searchSubItemCategories(mainCategoryName);
            
            if(mainCategoryName!=null){
                if(subItemCategoryDto.size()==0){
                    subItemCategoryCmb.addItem(null);
                    
                }else{
                    for(SubItemCategoryDto dto : subItemCategoryDto){
                        subItemCategoryCmb.addItem(dto.getSubCategoryName());
                        subCategoryIds.add(dto.getSubItemCategoryId());
                    }
                }
                
            }
        } catch (Exception ex) {
            Logger.getLogger(MainItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mainItemCategoryCmbActionPerformed

    private void jXButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton3ActionPerformed
        storeTamplate.setLocationRelativeTo(null);
        storeTamplate.setVisible(true);
        storeTamplate.repaint();
    }//GEN-LAST:event_jXButton3ActionPerformed

    private void mainCategoryCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainCategoryCmbActionPerformed
        try {
            subCategoryCmb.removeAllItems();
            subCategoryTamplateIds.removeAll(subCategoryTamplateIds);
            String mainCategoryName=mainCategoryCmb.getSelectedItem().toString();
            ArrayList<SubItemCategoryDto> subItemCategoryDto=subItemCategoryController.searchSubItemCategories(mainCategoryName);
            
            if(mainCategoryName!=null){
                if(subItemCategoryDto.size()==0){
                    subCategoryCmb.addItem(null);
                    
                }else{
                    for(SubItemCategoryDto dto : subItemCategoryDto){
                        subCategoryCmb.addItem(dto.getSubCategoryName());
                        subCategoryTamplateIds.add(dto.getSubItemCategoryId());
                    }
                }
                
            }
        } catch (Exception ex) {
            Logger.getLogger(MainItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mainCategoryCmbActionPerformed

    private void qtyTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyTxtActionPerformed

    private void jXButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton7ActionPerformed
        try {
            Integer mainCategoryId=mainCategoryTamplateIds.get(mainCategoryCmb.getSelectedIndex());
            System.out.println("Index : "+subCategoryCmb.getSelectedIndex());
            Integer subCategoryId=subCategoryTamplateIds.get(subCategoryCmb.getSelectedIndex());
            for(Integer i:subCategoryTamplateIds){
                System.out.println("ID : "+i);
            }
            System.out.println(subCategoryTamplateIds.get(1));
            ArrayList<MainItemDto> mainItemDtos=newItemController.searchAllItems(mainCategoryId , subCategoryId);
            DefaultTableModel dtm=(DefaultTableModel) templateSingleItemTbl.getModel();
            dtm.setRowCount(0);
            
            for(MainItemDto dto: mainItemDtos){
                Object[] rowData={
                    dto.getItemId(),
                    dto.getCodePrefix(),
                    dto.getItemName(),
                    dto.getUnitPrice()
                };
                dtm.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(MainItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jXButton7ActionPerformed

    private void jXButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton2ActionPerformed
        int tableRows = templateSingleItemTbl.getRowCount();
        Double qty=0.00;
        for (int i = 0; tableRows > i; i++) {
            try {
                boolean isSelected = Boolean.valueOf(String.valueOf(templateSingleItemTbl.getValueAt(i, 4)));
                Integer itemCode=(Integer) templateSingleItemTbl.getValueAt(i, 0);
                
                ArrayList<MainItemDto> list=newItemController.searchAllItems(itemCode);
                
                if(isSelected){
                    for(MainItemDto dto: list){
                        Object singleItemSelected[] = {itemCode,templateSingleItemTbl.getValueAt(i, 1),templateSingleItemTbl.getValueAt(i, 2), qty,dto.getUnitPrice()};
                    
                        tableModel.insertRow(0, singleItemSelected);
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(MainItem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jXButton2ActionPerformed

    private void jXButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton8ActionPerformed
        Double qty=Double.parseDouble(qtyTxt.getText());
        int row=templateItemsTbl.getSelectedRow();
        tableModel.setValueAt(qty, row, 3);
    }//GEN-LAST:event_jXButton8ActionPerformed

    private void jXButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton6ActionPerformed
        
        int tableRows = templateItemsTbl.getRowCount();
        
        for (int i = 0; tableRows > i; i++) {
            StoreTemplateDto storeTemplateDto=new StoreTemplateDto(0, 
                    0, 
                    (Integer) templateItemsTbl.getValueAt(i, 0), 
                    templateNameTxt.getText(), 
                    (Double) templateItemsTbl.getValueAt(i, 3), 
                    dashboard.CREATED_USER_ID, 
                    1
            );
            
            storeTemplateDtos.add(storeTemplateDto);
        }
        
        storeTamplate.dispose();
    }//GEN-LAST:event_jXButton6ActionPerformed

    private void subCategoryCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subCategoryCmbActionPerformed
        
    }//GEN-LAST:event_subCategoryCmbActionPerformed

    private void templateNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_templateNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_templateNameTxtActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MainItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MainItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MainItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MainItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MainItem().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXTable ItemTbl;
    private org.jdesktop.swingx.JXTextField barCodeTxt;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JCheckBox grnBox;
    private javax.swing.JLabel iconLbl;
    private org.jdesktop.swingx.JXTextField itemCodeTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private org.jdesktop.swingx.JXButton jXButton1;
    private org.jdesktop.swingx.JXButton jXButton2;
    private org.jdesktop.swingx.JXButton jXButton3;
    private org.jdesktop.swingx.JXButton jXButton4;
    private org.jdesktop.swingx.JXButton jXButton5;
    private org.jdesktop.swingx.JXButton jXButton6;
    private org.jdesktop.swingx.JXButton jXButton7;
    private org.jdesktop.swingx.JXButton jXButton8;
    private org.jdesktop.swingx.JXTextField jXTextField1;
    private org.jdesktop.swingx.JXTextField jXTextField2;
    private javax.swing.JComboBox<String> mainCategoryCmb;
    private javax.swing.JComboBox mainItemCategoryCmb;
    private org.jdesktop.swingx.JXTextField nameTxt;
    private org.jdesktop.swingx.JXTextField prefixTxt;
    private javax.swing.JComboBox<String> printerTypeCmb;
    private org.jdesktop.swingx.JXTextField qtyTxt;
    private org.jdesktop.swingx.JXButton saveBtn;
    private javax.swing.JCheckBox sellingItemBox;
    private org.jdesktop.swingx.JXTextField sellingPriceTxt;
    private javax.swing.JCheckBox statusBox;
    private javax.swing.JDialog storeTamplate;
    private javax.swing.JComboBox<String> subCategoryCmb;
    private javax.swing.JComboBox<String> subItemCategoryCmb;
    private org.jdesktop.swingx.JXTable templateItemsTbl;
    private org.jdesktop.swingx.JXTextField templateNameTxt;
    private org.jdesktop.swingx.JXTable templateSingleItemTbl;
    private javax.swing.JComboBox<String> unitTypeCmb;
    private org.jdesktop.swingx.JXTextField weightTxt;
    // End of variables declaration//GEN-END:variables

    private void loadAllItems() {
        try {
            boolean status=false;
            String quary="WHERE visible=1 and status=1";
            ArrayList<MainItemDto> allCategories=newItemController.getAllItems(quary);
        
            DefaultTableModel dtm=(DefaultTableModel) ItemTbl.getModel();
            dtm.setRowCount(0);
            
            for(MainItemDto dto: allCategories){
                if(dto.getStatus()==1){
                    status=true;
                }
                Object[] rowData={
                    dto.getItemId(),
                    dto.getItemName(),
                    dto.getUnitPrice(),
                    dto.getUnitType(),
                    status
                };
                dtm.addRow(rowData);
            }
            
        } catch (Exception ex) {
            Logger.getLogger(MainItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadMainCategory() {
        try {
            String quary="WHERE status=1 and visible=1";
            List<MainItemCategoryDto> allCategories=mainItemCategoryController.getAll(quary);
        
            for(MainItemCategoryDto dto: allCategories){
                mainItemCategoryCmb.addItem(dto.getCategoryName());
                mainCategoryIds.add(dto.getMainItemCategeryId());
            }
        } catch (Exception ex) {
            Logger.getLogger(MainItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void loadMainCategoryTamplate() {
        try {
            String quary="WHERE status=1 and visible=1";
            List<MainItemCategoryDto> allCategories=mainItemCategoryController.getAll(quary);
        
            for(MainItemCategoryDto dto: allCategories){
                mainCategoryCmb.addItem(dto.getCategoryName());
                mainCategoryTamplateIds.add(dto.getMainItemCategeryId());
            }
        } catch (Exception ex) {
            Logger.getLogger(MainItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadPrinterTypes() {
        try {
            String quary="WHERE status=1 and visible=1";
            List<MainPrinterTypesDto> mainPrinterTypesDtos=printerTypesController.getPrinterTypes(quary);
        
            for(MainPrinterTypesDto dto: mainPrinterTypesDtos){
                printerTypeCmb.addItem(dto.getName());
                printerTypeIds.add(dto.getPrinterTypeId());
            }
        } catch (Exception ex) {
            Logger.getLogger(MainItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadUnitTypes() {
        try {
            String quary="WHERE status=1 and visible=1";
            List<ItemUnitTypeDto> itemUnitTypeDtos=unitTypesController.getUnitTypes(quary);
        
            for(ItemUnitTypeDto dto: itemUnitTypeDtos){
                unitTypeCmb.addItem(dto.getName());
                unitTypeIds.add(dto.getUnitTypeId());
            }
        } catch (Exception ex) {
            Logger.getLogger(MainItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
