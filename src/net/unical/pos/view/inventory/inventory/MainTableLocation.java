/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.unical.pos.view.inventory.inventory;

import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import net.unical.pos.configurations.ConfigTimer;
import net.unical.pos.configurations.Configurations;
import net.unical.pos.controller.MainTableLocationController;
import net.unical.pos.dto.MainTableLocationDto;
import net.unical.pos.view.home.Dashboard;
import org.apache.commons.io.FileUtils;

/**
 *
 * @author Sanjuka
 */
public class MainTableLocation extends javax.swing.JInternalFrame {
    
    String destFileName = ""; // full local file path
    String selectedFilePath = ""; // only server folder stracture file path
    String absoluteFilePath = "";
    boolean isLogoImageChanged = false;
    
    private ConfigTimer configTimer;
    private boolean update=false;
    Dashboard dashboard;
    private MainTableLocationController mainTableLocationController;
    /**
     * Creates new form MainTableLocation
     */
    public MainTableLocation(Dashboard dashboard) {
        initComponents();
        
        this.dashboard=dashboard;
        this.mainTableLocationController=new MainTableLocationController();
        
        loadAllLocations();
        
        
        mainTableLocationTbl.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                
                if(mainTableLocationTbl.getSelectedRow()==-1){
                    update=false;
                    return;
                }
                String imagePath = Dashboard.configValues.get(Configurations.SE_IMAGE_PATH.getConfigValue())
                        +mainTableLocationTbl.getValueAt(mainTableLocationTbl.getSelectedRow(), 2);
                
                    ImageIcon iconLogo = new ImageIcon(imagePath);
                    Image image = iconLogo.getImage(); // transform it 
                    Image newimg = image.getScaledInstance(128, 128, java.awt.Image.SCALE_SMOOTH); // scale it the smooth way  
                    iconLogo = new ImageIcon(newimg);  // transform it back    
                    iconLbl.setIcon(iconLogo);
                
                nameTxt.setText((String) mainTableLocationTbl.getValueAt(mainTableLocationTbl.getSelectedRow(), 1));
                update=true;
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nameTxt = new org.jdesktop.swingx.JXTextField();
        jLabel2 = new javax.swing.JLabel();
        statusChBox = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jXButton1 = new org.jdesktop.swingx.JXButton();
        jXButton2 = new org.jdesktop.swingx.JXButton();
        iconLbl = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        mainTableLocationTbl = new org.jdesktop.swingx.JXTable();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add/Edit Main Category", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 102, 153))); // NOI18N

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Location");

        nameTxt.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Image");

        statusChBox.setBackground(new java.awt.Color(255, 255, 255));
        statusChBox.setForeground(new java.awt.Color(0, 0, 0));
        statusChBox.setSelected(true);
        statusChBox.setText("Is Active");
        statusChBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusChBoxActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(153, 0, 0));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Reset");
        jLabel4.setOpaque(true);

        jXButton1.setBackground(new java.awt.Color(0, 102, 153));
        jXButton1.setForeground(new java.awt.Color(255, 255, 255));
        jXButton1.setText("Save");
        jXButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton1ActionPerformed(evt);
            }
        });

        jXButton2.setText("Choose");
        jXButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton2ActionPerformed(evt);
            }
        });

        iconLbl.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Image", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 102, 153))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(statusChBox, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jXButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(iconLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(statusChBox)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(iconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Main Category Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 102, 153))); // NOI18N

        mainTableLocationTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Image Path", "Is Active"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(mainTableLocationTbl);
        if (mainTableLocationTbl.getColumnModel().getColumnCount() > 0) {
            mainTableLocationTbl.getColumnModel().getColumn(0).setMinWidth(0);
            mainTableLocationTbl.getColumnModel().getColumn(0).setPreferredWidth(0);
            mainTableLocationTbl.getColumnModel().getColumn(0).setMaxWidth(0);
            mainTableLocationTbl.getColumnModel().getColumn(2).setMinWidth(0);
            mainTableLocationTbl.getColumnModel().getColumn(2).setPreferredWidth(0);
            mainTableLocationTbl.getColumnModel().getColumn(2).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void statusChBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusChBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusChBoxActionPerformed

    private void jXButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton1ActionPerformed
        
        Integer activeStatus=0;
        
        if(statusChBox.isSelected()){
            activeStatus=1;
        }
        
        MainTableLocationDto mainTableLocationDto=new MainTableLocationDto(0,
            nameTxt.getText(), selectedFilePath,activeStatus,dashboard.CREATED_USER_ID,1);

        if(!update){
            try {
                boolean result=mainTableLocationController.saveMainTableLocation(mainTableLocationDto);
                if (result) {
//                    configTimer.setMessageTimer(true);
                } else {
                    //                   JOptionPane.showMessageDialog(this, "Failed to add the Category");
                }
            } catch (Exception ex) {
                Logger.getLogger(MainCategory.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
//            try {
//                if(mainTableLocationTbl.getSelectedRow()==-1){
//                    return;
//                }
//
//                mainTableLocationDto.setMainTableLocationId((int) mainTableLocationTbl.getValueAt(mainTableLocationTbl.getSelectedRow(), 0));
//                boolean result=mainTableLocationController.updateMainTableLocation(mainTableLocationDto);
//                if (result) {
//                    configTimer.setMessageTimer(true);
//                } else {
//                    //                     JOptionPane.showMessageDialog(this, "Update Fail");
//                }
//
//            } catch (Exception ex) {
//                Logger.getLogger(MainTableLocation.class.getName()).log(Level.SEVERE, null, ex);
//            }
        }
        loadAllLocations();
    }//GEN-LAST:event_jXButton1ActionPerformed

    private void jXButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton2ActionPerformed
        FileFilter imageFilter = new FileNameExtensionFilter("Image Files", ImageIO.getReaderFileSuffixes());
        fileChooser.addChoosableFileFilter(imageFilter);

        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {

            File file = fileChooser.getSelectedFile();

            String file_name = file.toString();

            Date d = new Date();

            // select file type
            if (file_name.endsWith(".gif")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".gif";
            } else if (file_name.endsWith(".bmp")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".bmp";
            } else if (file_name.endsWith(".jpg")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".jpg";
            } else if (file_name.endsWith(".jpeg")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".jpeg";
            } else if (file_name.endsWith(".wbmp")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".wbmp";
            } else if (file_name.endsWith(".png")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".png";
            } else {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + file_name.substring(file_name.length() - 5, file_name.length());
            }

            selectedFilePath = "/imagers/" + destFileName;

            destFileName = Dashboard.configValues.get(Configurations.SE_IMAGE_PATH.getConfigValue()) + "/imagers/" + destFileName;
            File source = new File(file_name);
            File dest = new File(destFileName);
            absoluteFilePath = dest.getAbsolutePath();

            try {
                //FileUtils.copyDirectory(source, dest);
                FileUtils.copyFile(source, dest);
                // image uploaded. preview image
                try {
                    ImageIcon iconLogo = new ImageIcon(destFileName);
                    Image image = iconLogo.getImage(); // transform it
                    Image newimg = image.getScaledInstance(128, 128, java.awt.Image.SCALE_SMOOTH); // scale it the smooth way
                    iconLogo = new ImageIcon(newimg);  // transform it back
                    iconLbl.setIcon(iconLogo);
                } catch (Exception e) {
                    // if system cants find the db value or error set default in source code.
                    //                    URL iconURL = getClass().getResource("/com/eideastech/zligger/order/images/comapny_170.png");
                    //                    iconLbl.setIcon(new ImageIcon(iconURL));
                }
                iconLbl.setText(null);
                isLogoImageChanged = true;
            } catch (IOException ex) {
                // error occurred. alert the user
                JOptionPane.showMessageDialog(this, "Image loard fail. Please try a diffrent image. Information :" + ex, "Load Fail", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jXButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MainTableLocation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MainTableLocation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MainTableLocation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MainTableLocation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MainTableLocation().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel iconLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private org.jdesktop.swingx.JXButton jXButton1;
    private org.jdesktop.swingx.JXButton jXButton2;
    private org.jdesktop.swingx.JXTable mainTableLocationTbl;
    private org.jdesktop.swingx.JXTextField nameTxt;
    private javax.swing.JCheckBox statusChBox;
    // End of variables declaration//GEN-END:variables
    
    private void loadAllLocations() {
        try {
            ArrayList<MainTableLocationDto> allLocations=mainTableLocationController.getAllLocations();
        
            DefaultTableModel dtm=(DefaultTableModel) mainTableLocationTbl.getModel();
            dtm.setRowCount(0);
            
            for(MainTableLocationDto dto: allLocations){
                boolean status=false;
                if(dto.getStatus()==1){
                    status=true;
                }
                Object[] rowData={
                    dto.getMainTableLocationId(),dto.getLocationName(),
                    dto.getImagePath(),
                    status
                };
                dtm.addRow(rowData);
            }
            
        } catch (Exception ex) {
            Logger.getLogger(MainCategory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
