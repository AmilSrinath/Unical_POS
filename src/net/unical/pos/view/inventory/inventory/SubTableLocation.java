/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.unical.pos.view.inventory.inventory;

import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import net.unical.pos.configurations.ConfigTimer;
import net.unical.pos.configurations.Configurations;
import net.unical.pos.controller.MainTableLocationController;
import net.unical.pos.controller.SubTableLocationController;
import net.unical.pos.dto.MainTableLocationDto;
import net.unical.pos.dto.SubTableLocationDto;
import net.unical.pos.view.home.Dashboard;
import org.apache.commons.io.FileUtils;

/**
 *
 * @author Sanjuka
 */
public class SubTableLocation extends javax.swing.JInternalFrame {
    
    String destFileName = ""; // full local file path
    String selectedFilePath = ""; // only server folder stracture file path
    String absoluteFilePath = "";
    boolean isLogoImageChanged = false;
    
    private boolean update=false;
    private MainTableLocationController mainTableLocationController;
    private SubTableLocationController subTableLocationController;
    Dashboard dashboard;
    
    private ArrayList<Integer> mainLocationIds=new ArrayList<>();
    private ConfigTimer configTimer=new ConfigTimer();
    /**
     * Creates new form SubTableLocation
     */
    public SubTableLocation(Dashboard dashboard) {
        initComponents();
        this.dashboard=dashboard;
        this.mainTableLocationController=new MainTableLocationController();
        this.subTableLocationController=new SubTableLocationController();
        
        loadAllSubLocations();
        loadMainTables();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        mainLocationCmb = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        subLocationNameTxt = new org.jdesktop.swingx.JXTextField();
        jLabel3 = new javax.swing.JLabel();
        statusBox = new javax.swing.JCheckBox();
        jXButton1 = new org.jdesktop.swingx.JXButton();
        chooseBtn = new org.jdesktop.swingx.JXButton();
        iconLbl = new javax.swing.JLabel();
        jXButton2 = new org.jdesktop.swingx.JXButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        subTableLocationTbl = new org.jdesktop.swingx.JXTable();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add / Edit Sub Location", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 102, 153))); // NOI18N

        mainLocationCmb.setBackground(new java.awt.Color(255, 255, 255));
        mainLocationCmb.setForeground(new java.awt.Color(0, 0, 0));
        mainLocationCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainLocationCmbActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Main Location");

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Sub Location");

        subLocationNameTxt.setBackground(new java.awt.Color(255, 255, 255));
        subLocationNameTxt.setForeground(new java.awt.Color(0, 0, 0));

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Image");

        statusBox.setBackground(new java.awt.Color(255, 255, 255));
        statusBox.setForeground(new java.awt.Color(0, 0, 0));
        statusBox.setSelected(true);
        statusBox.setText("Is Active");

        jXButton1.setBackground(new java.awt.Color(0, 102, 153));
        jXButton1.setForeground(new java.awt.Color(255, 255, 255));
        jXButton1.setText("Save");
        jXButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton1ActionPerformed(evt);
            }
        });

        chooseBtn.setText("Choose");
        chooseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseBtnActionPerformed(evt);
            }
        });

        iconLbl.setBorder(javax.swing.BorderFactory.createTitledBorder("Image"));

        jXButton2.setBackground(new java.awt.Color(153, 0, 0));
        jXButton2.setForeground(new java.awt.Color(255, 255, 255));
        jXButton2.setText("Reset");
        jXButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(mainLocationCmb, 0, 132, Short.MAX_VALUE)
                                .addComponent(subLocationNameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(statusBox, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chooseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jXButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(iconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mainLocationCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subLocationNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(statusBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jXButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Current Sub Location", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 102, 153))); // NOI18N

        subTableLocationTbl.setBackground(new java.awt.Color(255, 255, 255));
        subTableLocationTbl.setForeground(new java.awt.Color(0, 0, 0));
        subTableLocationTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Main Category Name", "Sub Category Name", "Is Active"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(subTableLocationTbl);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mainLocationCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainLocationCmbActionPerformed

    }//GEN-LAST:event_mainLocationCmbActionPerformed

    private void jXButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton1ActionPerformed

        int activeStatus=0;

        if(statusBox.isSelected()){
            activeStatus=1;
        }

        int index=mainLocationCmb.getSelectedIndex();

        SubTableLocationDto subTableLocationDto=new SubTableLocationDto(0,mainLocationIds.get(index),
            mainLocationCmb.getSelectedItem().toString(),subLocationNameTxt.getText(),
            selectedFilePath,activeStatus,dashboard.CREATED_USER_ID,1);

        if(!update){
            try {
                boolean result=subTableLocationController.saveSubTableLocation(subTableLocationDto);
                if (result) {
                    configTimer.setMessageTimer(true);
                } else {
                    //                     JOptionPane.showMessageDialog(this, "Failed to add the Category");
                }
            } catch (Exception ex) {
                Logger.getLogger(SubCategory.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            try {
                if(subTableLocationTbl.getSelectedRow()==-1){
                    return;
                }

                subTableLocationDto.setSubTableLocationId((int) subTableLocationTbl.getValueAt(subTableLocationTbl.getSelectedRow(), 0));
                boolean result=subTableLocationController.updateSubTableLocation(subTableLocationDto);
                if (result) {
                    configTimer.setMessageTimer(true);
                } else {
                    //                     JOptionPane.showMessageDialog(this, "Update Fail");
                }

            } catch (Exception ex) {
                Logger.getLogger(SubTableLocation.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
                loadAllSubLocations();
    }//GEN-LAST:event_jXButton1ActionPerformed

    private void chooseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseBtnActionPerformed
        FileFilter imageFilter = new FileNameExtensionFilter("Image Files", ImageIO.getReaderFileSuffixes());
        fileChooser.addChoosableFileFilter(imageFilter);

        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {

            File file = fileChooser.getSelectedFile();

            String file_name = file.toString();

            Date d = new Date();

            // select file type
            if (file_name.endsWith(".gif")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".gif";
            } else if (file_name.endsWith(".bmp")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".bmp";
            } else if (file_name.endsWith(".jpg")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".jpg";
            } else if (file_name.endsWith(".jpeg")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".jpeg";
            } else if (file_name.endsWith(".wbmp")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".wbmp";
            } else if (file_name.endsWith(".png")) {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + ".png";
            } else {
                destFileName = d.getTime() + Dashboard.CREATED_USER_ID + Dashboard.systemMAC + file_name.substring(file_name.length() - 5, file_name.length());
            }

            selectedFilePath = "" + destFileName;

            destFileName = Dashboard.configValues.get(Configurations.SE_IMAGE_PATH.getConfigValue()) + "" + destFileName;
            File source = new File(file_name);
            File dest = new File(destFileName);
            absoluteFilePath = dest.getAbsolutePath();

            try {
                //FileUtils.copyDirectory(source, dest);
                FileUtils.copyFile(source, dest);
                // image uploaded. preview image
                try {
                    ImageIcon iconLogo = new ImageIcon(destFileName);
                    Image image = iconLogo.getImage(); // transform it
                    Image newimg = image.getScaledInstance(128, 128, java.awt.Image.SCALE_SMOOTH); // scale it the smooth way
                    iconLogo = new ImageIcon(newimg);  // transform it back
                    iconLbl.setIcon(iconLogo);
                } catch (Exception e) {
                    // if system cants find the db value or error set default in source code.
                    //                    URL iconURL = getClass().getResource("/com/eideastech/zligger/order/images/comapny_170.png");
                    //                    iconLbl.setIcon(new ImageIcon(iconURL));
                }
                iconLbl.setText(null);
                isLogoImageChanged = true;
            } catch (IOException ex) {
                // error occurred. alert the user
                JOptionPane.showMessageDialog(this, "Image loard fail. Please try a diffrent image. Information :" + ex, "Load Fail", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_chooseBtnActionPerformed

    private void jXButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton2ActionPerformed

//        for(int i=0; i<mainCategoryIds.size(); i++){
//            System.out.println();
//            System.out.println(mainCategoryIds.get(i));
//        }
    }//GEN-LAST:event_jXButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(SubTableLocation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(SubTableLocation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(SubTableLocation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(SubTableLocation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new SubTableLocation().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton chooseBtn;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel iconLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXButton jXButton1;
    private org.jdesktop.swingx.JXButton jXButton2;
    private javax.swing.JComboBox<String> mainLocationCmb;
    private javax.swing.JCheckBox statusBox;
    private org.jdesktop.swingx.JXTextField subLocationNameTxt;
    private org.jdesktop.swingx.JXTable subTableLocationTbl;
    // End of variables declaration//GEN-END:variables
    
    private void loadMainTables() {
        try {
            ArrayList<MainTableLocationDto> allLocations=mainTableLocationController.getAllLocations();
        
            for(MainTableLocationDto dto: allLocations){
                mainLocationCmb.addItem(dto.getLocationName());
                mainLocationIds.add(dto.getMainTableLocationId());   
            }
            
        } catch (Exception ex) {
            Logger.getLogger(SubCategory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadAllSubLocations() {
        try {
            ArrayList<SubTableLocationDto> allLocations=subTableLocationController.getAllSubLocations();
            
            DefaultTableModel dtm=(DefaultTableModel) subTableLocationTbl.getModel();
            dtm.setRowCount(0);
            
            boolean isActive=false;
            
            for(SubTableLocationDto dto: allLocations){
                
                if(dto.getStatus()==1){
                    isActive=true;
                }
                Object[] rowData={
                    dto.getMainName(),dto.getSubName(),
                    dto.getImagePath(),
                    isActive
                };
                dtm.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(SubTableLocation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
