/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.unical.pos.view.sales;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.unical.pos.controller.CustomerController;
import net.unical.pos.controller.EmployeeManagementController;
import net.unical.pos.controller.MainItemCategoryController;
import net.unical.pos.controller.MainItemController;
import net.unical.pos.controller.MainOrderController;
import net.unical.pos.controller.StockController;
import net.unical.pos.controller.SubItemCategoryController;
import net.unical.pos.dto.CustomerDto;
import net.unical.pos.dto.EmployeeManagementDto;
import net.unical.pos.dto.MainItemCategoryDto;
import net.unical.pos.dto.MainItemDto;
import net.unical.pos.dto.MainOrderDto;
import net.unical.pos.dto.OrderDetailsDto;
import net.unical.pos.dto.OrderDto;
import net.unical.pos.dto.StockDto;
import net.unical.pos.dto.SubItemCategoryDto;
import net.unical.pos.view.home.Dashboard;

/**
 *
 * @author Sanjuka
 */
public class OnlineOrders extends javax.swing.JFrame {

    /**
     * Creates new form OnlineOrders
     */
    
    public DefaultTableModel mainCategoryTb = null;
    public DefaultTableModel subCategoryTb = null;
    public DefaultTableModel allItemsTb = null;
    DefaultTableModel tableModelSelectedItems = null;
    DefaultTableModel tableModel = null;
    
    private MainItemCategoryController mainItemCategoryController;
    private SubItemCategoryController subItemCategoryController;
    private MainItemController mainItemController;
    private MainOrderController mainOrderController;
    private CustomerController customerController;
    private EmployeeManagementController employeeManagementController;
    private StockController stockController;
    
    String selectedSeat = "T";
    int currentSelectedColumn = 0;
    int currentSelectedRow = 0;
    
    Double finalSubTotal=0.00;
    Double finalDiscount=10.00;
    Double finalGrandTotal=0.00;
    
    Dashboard dashboard;
    
    ArrayList<Integer> deliveryPersonIds=new ArrayList<>();
    
    public OnlineOrders(Dashboard dashboard) {
        initComponents();
        this.dashboard=dashboard;
        
        Dimension fullScreenSize = Toolkit.getDefaultToolkit().getScreenSize();
        this.setMinimumSize(fullScreenSize);
        this.setSize(fullScreenSize);
        this.setLocationRelativeTo(null);
        
        this.mainItemCategoryController = new MainItemCategoryController();
        this.subItemCategoryController = new SubItemCategoryController();
        this.mainItemController = new MainItemController();
        this.mainOrderController = new MainOrderController();
        this.customerController=new CustomerController();
        this.employeeManagementController=new EmployeeManagementController();
        this.stockController=new StockController();
        
        tableModel = (DefaultTableModel) orderDetailsTbl.getModel();
        mainCategoryTb = (DefaultTableModel) mainCategoryTbl.getModel();
        subCategoryTb = (DefaultTableModel) subCategoryTbl.getModel();
        allItemsTb = (DefaultTableModel) itemsTbl.getModel();
        
        loadDeliveryPerson();
        loadMainCategory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        customer = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        nameTxt = new org.jdesktop.swingx.JXTextField();
        nicTxt = new org.jdesktop.swingx.JXTextField();
        phoneTxt = new org.jdesktop.swingx.JXTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        addressTxt = new org.jdesktop.swingx.JXTextArea();
        statusBox = new javax.swing.JCheckBox();
        loyaltyBox = new javax.swing.JCheckBox();
        jXButton2 = new org.jdesktop.swingx.JXButton();
        jXButton4 = new org.jdesktop.swingx.JXButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jXButton1 = new org.jdesktop.swingx.JXButton();
        customerNameTxt = new org.jdesktop.swingx.JXTextField();
        customerNicTxt = new org.jdesktop.swingx.JXTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jTablePane2 = new javax.swing.JTabbedPane();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        mainCategoryTbl = new org.jdesktop.swingx.JXTable();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        subCategoryTbl = new org.jdesktop.swingx.JXTable();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        itemsTbl = new org.jdesktop.swingx.JXTable();
        jLabel16 = new javax.swing.JLabel();
        searchText = new javax.swing.JTextField();
        searchBtn = new org.jdesktop.swingx.JXButton();
        removeBtn = new org.jdesktop.swingx.JXButton();
        cancelBtn = new org.jdesktop.swingx.JXButton();
        closeBtn = new org.jdesktop.swingx.JXButton();
        optionBtn1 = new org.jdesktop.swingx.JXButton();
        jPanel19 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        subTotLbl = new javax.swing.JLabel();
        discLbl = new javax.swing.JLabel();
        serviceChaLbl = new javax.swing.JLabel();
        grandTotLbl = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        orderDetailsTbl = new org.jdesktop.swingx.JXTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jXTextArea1 = new org.jdesktop.swingx.JXTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jXTextField1 = new org.jdesktop.swingx.JXTextField();
        jLabel17 = new javax.swing.JLabel();
        deliveryCmb = new javax.swing.JComboBox<>();
        jPanel12 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        customer.setAlwaysOnTop(true);

        customer.setMinimumSize(new java.awt.Dimension(420, 410));

        customer.setResizable(false);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add new customer", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 102, 153))); // NOI18N

        jLabel5.setText("Name ");

        jLabel11.setText("NIC");

        jLabel12.setText("Phone");

        jLabel14.setText("Address");

        addressTxt.setColumns(20);
        addressTxt.setRows(5);
        jScrollPane2.setViewportView(addressTxt);

        statusBox.setSelected(true);
        statusBox.setText("Is Active");

        loyaltyBox.setSelected(true);
        loyaltyBox.setText("Is Loyalty");

        jXButton2.setBackground(new java.awt.Color(0, 102, 153));
        jXButton2.setForeground(new java.awt.Color(255, 255, 255));
        jXButton2.setText("Save");
        jXButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton2ActionPerformed(evt);
            }
        });

        jXButton4.setBackground(new java.awt.Color(204, 0, 0));
        jXButton4.setForeground(new java.awt.Color(255, 255, 255));
        jXButton4.setText("Clear");
        jXButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jXButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jXButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(loyaltyBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(statusBox))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(phoneTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nicTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nicTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusBox)
                    .addComponent(loyaltyBox))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout customerLayout = new javax.swing.GroupLayout(customer.getContentPane());
        customer.getContentPane().setLayout(customerLayout);
        customerLayout.setHorizontalGroup(
            customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        customerLayout.setVerticalGroup(
            customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Customer Details", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 102, 153))); // NOI18N

        jLabel2.setText("Name :");

        jXButton1.setBackground(new java.awt.Color(0, 102, 153));
        jXButton1.setForeground(new java.awt.Color(255, 255, 255));
        jXButton1.setText("Check Customer");
        jXButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("NIC No :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(132, Short.MAX_VALUE)
                .addComponent(jXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(customerNicTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customerNameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(customerNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerNicTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(12, 12, 12)
                .addComponent(jXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Order Details", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 102, 153))); // NOI18N

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        jTablePane2.setBackground(new java.awt.Color(255, 255, 255));
        jTablePane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Item Table"));
        jTablePane2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTablePane2.setDoubleBuffered(true);

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setForeground(new java.awt.Color(0, 102, 153));
        jPanel14.setPreferredSize(new java.awt.Dimension(400, 300));

        mainCategoryTbl.setBackground(new java.awt.Color(255, 255, 255));
        mainCategoryTbl.setForeground(new java.awt.Color(0, 0, 0));
        mainCategoryTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mainCategoryTbl.setCellSelectionEnabled(true);
        mainCategoryTbl.setFont(new java.awt.Font("Tahoma", 0, 14));
        mainCategoryTbl.setRowHeight(65);
        mainCategoryTbl.setRowMargin(8);
        mainCategoryTbl.getTableHeader().setReorderingAllowed(false);
        mainCategoryTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mainCategoryTblMousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(mainCategoryTbl);
        mainCategoryTbl.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (mainCategoryTbl.getColumnModel().getColumnCount() > 0) {
            mainCategoryTbl.getColumnModel().getColumn(1).setMinWidth(0);
            mainCategoryTbl.getColumnModel().getColumn(1).setPreferredWidth(0);
            mainCategoryTbl.getColumnModel().getColumn(1).setMaxWidth(0);
            mainCategoryTbl.getColumnModel().getColumn(3).setMinWidth(0);
            mainCategoryTbl.getColumnModel().getColumn(3).setPreferredWidth(0);
            mainCategoryTbl.getColumnModel().getColumn(3).setMaxWidth(0);
            mainCategoryTbl.getColumnModel().getColumn(5).setMinWidth(0);
            mainCategoryTbl.getColumnModel().getColumn(5).setPreferredWidth(0);
            mainCategoryTbl.getColumnModel().getColumn(5).setMaxWidth(0);
            mainCategoryTbl.getColumnModel().getColumn(7).setMinWidth(0);
            mainCategoryTbl.getColumnModel().getColumn(7).setPreferredWidth(0);
            mainCategoryTbl.getColumnModel().getColumn(7).setMaxWidth(0);
            mainCategoryTbl.getColumnModel().getColumn(9).setMinWidth(0);
            mainCategoryTbl.getColumnModel().getColumn(9).setPreferredWidth(0);
            mainCategoryTbl.getColumnModel().getColumn(9).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
        );

        jTablePane2.addTab("Main Category", new javax.swing.ImageIcon(getClass().getResource("/net/unical/pos/imagers/inventory/mainItemCategory-35.png")), jPanel14); // NOI18N

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setForeground(new java.awt.Color(0, 102, 153));

        subCategoryTbl.setBackground(new java.awt.Color(255, 255, 255));
        subCategoryTbl.setForeground(new java.awt.Color(0, 0, 0));
        subCategoryTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        subCategoryTbl.setCellSelectionEnabled(true);
        subCategoryTbl.setFont(new java.awt.Font("Tahoma", 0, 14));
        subCategoryTbl.setRowHeight(65);
        subCategoryTbl.setRowMargin(8);
        subCategoryTbl.getTableHeader().setReorderingAllowed(false);
        subCategoryTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                subCategoryTblMousePressed(evt);
            }
        });
        jScrollPane6.setViewportView(subCategoryTbl);
        subCategoryTbl.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (subCategoryTbl.getColumnModel().getColumnCount() > 0) {
            subCategoryTbl.getColumnModel().getColumn(1).setMinWidth(0);
            subCategoryTbl.getColumnModel().getColumn(1).setPreferredWidth(0);
            subCategoryTbl.getColumnModel().getColumn(1).setMaxWidth(0);
            subCategoryTbl.getColumnModel().getColumn(3).setMinWidth(0);
            subCategoryTbl.getColumnModel().getColumn(3).setPreferredWidth(0);
            subCategoryTbl.getColumnModel().getColumn(3).setMaxWidth(0);
            subCategoryTbl.getColumnModel().getColumn(5).setMinWidth(0);
            subCategoryTbl.getColumnModel().getColumn(5).setPreferredWidth(0);
            subCategoryTbl.getColumnModel().getColumn(5).setMaxWidth(0);
            subCategoryTbl.getColumnModel().getColumn(7).setMinWidth(0);
            subCategoryTbl.getColumnModel().getColumn(7).setPreferredWidth(0);
            subCategoryTbl.getColumnModel().getColumn(7).setMaxWidth(0);
            subCategoryTbl.getColumnModel().getColumn(9).setMinWidth(0);
            subCategoryTbl.getColumnModel().getColumn(9).setPreferredWidth(0);
            subCategoryTbl.getColumnModel().getColumn(9).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
        );

        jTablePane2.addTab("Sub Category", new javax.swing.ImageIcon(getClass().getResource("/net/unical/pos/imagers/inventory/subItemCategory-35.png")), jPanel15); // NOI18N

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setForeground(new java.awt.Color(0, 102, 153));

        itemsTbl.setBackground(new java.awt.Color(255, 255, 255));
        itemsTbl.setForeground(new java.awt.Color(0, 0, 0));
        itemsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "1", "2", "3", "4", "5", "6", "7", "8", "9", "Title 10"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemsTbl.setCellSelectionEnabled(true);
        itemsTbl.setFont(new java.awt.Font("Tahoma", 0, 14));
        itemsTbl.setRowHeight(65);
        itemsTbl.setRowMargin(8);
        itemsTbl.getTableHeader().setReorderingAllowed(false);
        itemsTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemsTblMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                itemsTblMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itemsTblMouseReleased(evt);
            }
        });
        jScrollPane7.setViewportView(itemsTbl);
        itemsTbl.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (itemsTbl.getColumnModel().getColumnCount() > 0) {
            itemsTbl.getColumnModel().getColumn(1).setMinWidth(0);
            itemsTbl.getColumnModel().getColumn(1).setPreferredWidth(0);
            itemsTbl.getColumnModel().getColumn(1).setMaxWidth(0);
            itemsTbl.getColumnModel().getColumn(3).setMinWidth(0);
            itemsTbl.getColumnModel().getColumn(3).setPreferredWidth(0);
            itemsTbl.getColumnModel().getColumn(3).setMaxWidth(0);
            itemsTbl.getColumnModel().getColumn(5).setMinWidth(0);
            itemsTbl.getColumnModel().getColumn(5).setPreferredWidth(0);
            itemsTbl.getColumnModel().getColumn(5).setMaxWidth(0);
            itemsTbl.getColumnModel().getColumn(7).setMinWidth(0);
            itemsTbl.getColumnModel().getColumn(7).setPreferredWidth(0);
            itemsTbl.getColumnModel().getColumn(7).setMaxWidth(0);
            itemsTbl.getColumnModel().getColumn(9).setMinWidth(0);
            itemsTbl.getColumnModel().getColumn(9).setPreferredWidth(0);
            itemsTbl.getColumnModel().getColumn(9).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );

        jTablePane2.addTab("Items", new javax.swing.ImageIcon(getClass().getResource("/net/unical/pos/imagers/inventory/mainItems-35.png")), jPanel16); // NOI18N

        jLabel16.setForeground(new java.awt.Color(0, 102, 153));
        jLabel16.setText("Search Item");

        searchText.setBackground(new java.awt.Color(255, 255, 255));
        searchText.setForeground(new java.awt.Color(0, 0, 0));

        searchBtn.setBackground(new java.awt.Color(0, 102, 153));
        searchBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        removeBtn.setBackground(new java.awt.Color(0, 0, 0));
        removeBtn.setForeground(new java.awt.Color(255, 255, 255));
        removeBtn.setText("Remove Item");
        removeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtnActionPerformed(evt);
            }
        });

        cancelBtn.setBackground(new java.awt.Color(204, 204, 0));
        cancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        cancelBtn.setText("Cancel Order");

        closeBtn.setBackground(new java.awt.Color(204, 0, 0));
        closeBtn.setForeground(new java.awt.Color(255, 255, 255));
        closeBtn.setText("Close");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        optionBtn1.setBackground(new java.awt.Color(0, 102, 153));
        optionBtn1.setForeground(new java.awt.Color(255, 255, 255));
        optionBtn1.setText("Save");
        optionBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTablePane2)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addComponent(removeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(optionBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTablePane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(optionBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));
        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder("Bill Details"));

        jLabel7.setText("Sub Total : ");

        jLabel8.setText("Discount :");

        jLabel9.setText("Delivery Charge :");

        jLabel10.setText("Grand Total :");

        subTotLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        subTotLbl.setText("0.00");

        discLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        discLbl.setText("0.00");

        serviceChaLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        serviceChaLbl.setText("0.00");

        grandTotLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        grandTotLbl.setText("0.00");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(serviceChaLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grandTotLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(discLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subTotLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(subTotLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(discLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serviceChaLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grandTotLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 17, Short.MAX_VALUE))
        );

        orderDetailsTbl.setBackground(new java.awt.Color(255, 255, 255));
        orderDetailsTbl.setForeground(new java.awt.Color(0, 0, 0));
        orderDetailsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Name", "Qty", "Price", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderDetailsTbl.setCellSelectionEnabled(true);

        orderDetailsTbl.setIntercellSpacing(new java.awt.Dimension(1, 5));

        orderDetailsTbl.setRowHeight(38);

        orderDetailsTbl.getTableHeader().setReorderingAllowed(false);

        if (orderDetailsTbl.getColumnModel().getColumnCount() > 0) {
            orderDetailsTbl.getColumnModel().getColumn(0).setMinWidth(0);
            orderDetailsTbl.getColumnModel().getColumn(0).setPreferredWidth(0);
            orderDetailsTbl.getColumnModel().getColumn(0).setMaxWidth(0);
        }
        jScrollPane8.setViewportView(orderDetailsTbl);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, 247, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Delivery Details", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 102, 153))); // NOI18N

        jXTextArea1.setColumns(20);
        jXTextArea1.setRows(5);
        jScrollPane1.setViewportView(jXTextArea1);

        jLabel3.setText("Delivery Address :");

        jLabel4.setText("Delivery Charge : ");

        jXTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jXTextField1.setText("0.00");

        jLabel17.setText("Deliver By : ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(227, 227, 227))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jXTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deliveryCmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(deliveryCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jXTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(0, 102, 153));

        jLabel6.setBackground(new java.awt.Color(0, 102, 102));
        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 204, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("UNICAL");
        jLabel6.setOpaque(true);

        jLabel19.setBackground(new java.awt.Color(204, 204, 204));
        jLabel19.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("March / 31");

        jLabel20.setBackground(new java.awt.Color(255, 255, 255));
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("18.00 PM");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel15.setBackground(new java.awt.Color(204, 204, 204));
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("User Name");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 400, Short.MAX_VALUE)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 291, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jXButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton1ActionPerformed
        customer.setLocationRelativeTo(null);
        customer.setVisible(true);
    }//GEN-LAST:event_jXButton1ActionPerformed

    private void mainCategoryTblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainCategoryTblMousePressed
        try {
            int selectedColumn = mainCategoryTbl.getSelectedColumn();
            int selectedRow = mainCategoryTbl.getSelectedRow();
            Object val = mainCategoryTbl.getValueAt(selectedRow, (selectedColumn + 1));
            if (val != null) {
                loadSubCategory((int) val);
                jTablePane2.setSelectedIndex(1);
            }
        } catch (Exception e) {
            // if error keep silent - no action
            //Logger.getLogger(POSMain_.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_mainCategoryTblMousePressed

    private void subCategoryTblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subCategoryTblMousePressed
        try {
            int selectedColumn = subCategoryTbl.getSelectedColumn();
            int selectedRow = subCategoryTbl.getSelectedRow();
            Object val = subCategoryTbl.getValueAt(selectedRow, (selectedColumn + 1));
            if (val != null) {
                loadAllItems((int) val);
                jTablePane2.setSelectedIndex(2);
            }
        } catch (Exception e) {
            // if error keep silent - no action
            //Logger.getLogger(POSMain_.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_subCategoryTblMousePressed

    private void itemsTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemsTblMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_itemsTblMouseClicked

    private void itemsTblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemsTblMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemsTblMousePressed

    private void itemsTblMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemsTblMouseReleased
        try {
            double selectedQTY = checkQtyToggleButton();
            currentSelectedColumn = itemsTbl.getSelectedColumn();
            currentSelectedRow = itemsTbl.getSelectedRow();
            
            Object itemValuesTbl = itemsTbl.getValueAt(currentSelectedRow, (currentSelectedColumn + 1));
            Double availableQty=checkItemAvailability((Integer)itemValuesTbl);
            if(availableQty!=0.00){
                

                ArrayList<Integer>itemIds=new ArrayList<>();

                DefaultTableModel dtm = (DefaultTableModel) orderDetailsTbl.getModel();


                ArrayList<MainItemDto> mainItemDtos = mainItemController.searchAllItems((Integer) itemValuesTbl);

                Double finSubTot=0.00;
                Double subTotal=0.00;
                Double discount=10.00;

                int tableRows = orderDetailsTbl.getRowCount();
                for(MainItemDto dto: mainItemDtos){   

                    itemIds.add(dto.getItemId());

                    subTotal=dto.getUnitPrice()*selectedQTY;
                    finSubTot+=finSubTot+subTotal;

                    finalSubTotal+=finSubTot;

                    finalDiscount=finalSubTotal*discount/100; 
                    finalGrandTotal=finalSubTotal-finalDiscount;


                    Integer isNotEqual=0;
                    for(int i = 0; tableRows > i; i++){
                        if(orderDetailsTbl.getValueAt(i, 0).equals(dto.getItemId())){
                            Double qty=(Double) orderDetailsTbl.getValueAt(i, 2);
                            qty=qty+selectedQTY;
                            tableModel.setValueAt(qty, i, 2);
                            isNotEqual=0;
                            break;
                        }else{
                            isNotEqual=1;
                        }
                    }

                    if(tableRows==0){
                        Object[] rowData = {
                            dto.getItemId(),
                            dto.getItemName(),
                            selectedQTY,
                            dto.getUnitPrice() * selectedQTY,
                            dto.getImagePath()
                        };
                        dtm.addRow(rowData);
                    }else if(isNotEqual==1){
                        Object[] rowData = {
                            dto.getItemId(),
                            dto.getItemName(),
                            selectedQTY,
                            dto.getUnitPrice() * selectedQTY,
                            dto.getImagePath()
                        };
                        dtm.addRow(rowData);
                    }


                    subTotLbl.setText(finalSubTotal.toString());
                    discLbl.setText(finalDiscount.toString());
                    grandTotLbl.setText(finalGrandTotal.toString());
                }
            }else{
//                messageLbl.setText("Not available in stock");
            }
            
            
            itemsTbl.getSelectionModel().clearSelection();
            
            
        } catch (Exception ex) {
            Logger.getLogger(Order.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_itemsTblMouseReleased

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBtnActionPerformed

    private void removeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtnActionPerformed
        if (orderDetailsTbl.getSelectedRowCount() == 1) {
            int selectedRow = orderDetailsTbl.getSelectedRow();
            int mapRowValue = (int) orderDetailsTbl.getValueAt(selectedRow, 3); // map aginst row
            orderDetailsTbl.remove(mapRowValue);
        }
    }//GEN-LAST:event_removeBtnActionPerformed

    private void optionBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionBtn1ActionPerformed
                try {
            int tableRows = orderDetailsTbl.getRowCount();
            
            long now =System.currentTimeMillis();
            Date sqlDate = new Date(now);
            
            OrderDto orderDto=new OrderDto();
            ArrayList<OrderDetailsDto> orderDetailsDtos=new ArrayList<>();
            
            orderDto.setOrderId(0);
            orderDto.setBillNo("");
            orderDto.setDiscountId(1);
            orderDto.setSubTotalPrice(Double.parseDouble(subTotLbl.getText()));
            orderDto.setTotalDiscountPrice(Double.parseDouble(discLbl.getText()));
            orderDto.setTotalOrderPrice(Double.parseDouble(grandTotLbl.getText()));
            orderDto.setPaymentType(1);
            orderDto.setTableNo(1);
            orderDto.setCreatedDate(sqlDate);
            orderDto.setEditedDate(sqlDate);
            orderDto.setAdult(1);
            orderDto.setChild(0);
            orderDto.setRemark("");
            orderDto.setUserId(dashboard.CREATED_USER_ID);
            orderDto.setEditedBy(dashboard.CREATED_USER_ID);
            orderDto.setStatus(1);
            orderDto.setVisible(1);
            
            
            for (int i = 0; tableRows > i; i++) {
                OrderDetailsDto orderDetailsDto=new OrderDetailsDto();
                orderDetailsDto.setOrderDetailsId(0);
                orderDetailsDto.setOrderId(0);
                orderDetailsDto.setItemId((Integer) orderDetailsTbl.getValueAt(i, 0));
                orderDetailsDto.setItemBarCode(0);
                orderDetailsDto.setUnitTypeId(1);
                orderDetailsDto.setPrinterTypeId(1);
                orderDetailsDto.setQty((Integer) orderDetailsTbl.getValueAt(i, 2));
                orderDetailsDto.setPerItemPrice((Double) orderDetailsTbl.getValueAt(i, 3));
                orderDetailsDto.setTotalDiscountPrice(0.00);
                orderDetailsDto.setTotalItemPrice((Double)orderDetailsTbl.getValueAt(i, 2)*
                        (Double)orderDetailsTbl.getValueAt(i, 3));
                orderDetailsDto.setRemark("");
                orderDetailsDto.setStatus(1);
                orderDetailsDto.setUserId(dashboard.CREATED_USER_ID);
                orderDetailsDtos.add(orderDetailsDto);
                
            }
            
            MainOrderDto mainOrderDto=new MainOrderDto(orderDto, orderDetailsDtos);
            
            Integer result=mainOrderController.saveMainOrder(mainOrderDto);
            if(result!=0){
                JOptionPane.showMessageDialog(this, "Order Save Sauccessfull");
                OnlineOrders onlineOrders=new OnlineOrders(dashboard);
                onlineOrders.dispose();
                Sales sales=new Sales(dashboard);
                sales.repaint();
            }else{
                JOptionPane.showMessageDialog(this, "Order Save Fail");
            }
        } catch (Exception ex) {
            Logger.getLogger(Order.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_optionBtn1ActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeBtnActionPerformed

    private void jXButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton2ActionPerformed
        try {
            Timestamp timestamp = new Timestamp(System.currentTimeMillis());
            
            Integer status=0;
            Integer loyalty=0;
            
            if(statusBox.isSelected()){
                status=1;
            }
            if(loyaltyBox.isSelected()){
                loyalty=1;
            }
            
            CustomerDto customerDto=new CustomerDto(
                    0,
                    nameTxt.getText(),
                    nicTxt.getText(),
                    addressTxt.getText(),
                    Integer.parseInt(phoneTxt.getText()),
                    timestamp,
                    loyalty,
                    0.00,
                    status,
                    dashboard.CREATED_USER_ID,
                    1
            );
            
            boolean result=customerController.saveCustomer(customerDto);
            if(result){
                JOptionPane.showMessageDialog(this, "Customer added successfully");
                customerNameTxt.setText(customerDto.getCustomerName());
                customerNicTxt.setText(customerDto.getNic());
                customer.dispose();
                
            }else{
                JOptionPane.showMessageDialog(this, "Customer added fail");
            }
        } catch (Exception ex) {
            Logger.getLogger(OnlineOrders.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jXButton2ActionPerformed

    private void jXButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton4ActionPerformed
        clearAll();
    }//GEN-LAST:event_jXButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(OnlineOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(OnlineOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(OnlineOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(OnlineOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new OnlineOrders().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXTextArea addressTxt;
    private org.jdesktop.swingx.JXButton cancelBtn;
    private org.jdesktop.swingx.JXButton closeBtn;
    private javax.swing.JDialog customer;
    private org.jdesktop.swingx.JXTextField customerNameTxt;
    private org.jdesktop.swingx.JXTextField customerNicTxt;
    private javax.swing.JComboBox<String> deliveryCmb;
    private javax.swing.JLabel discLbl;
    private javax.swing.JLabel grandTotLbl;
    public org.jdesktop.swingx.JXTable itemsTbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    public javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTablePane2;
    private org.jdesktop.swingx.JXButton jXButton1;
    private org.jdesktop.swingx.JXButton jXButton2;
    private org.jdesktop.swingx.JXButton jXButton4;
    private org.jdesktop.swingx.JXTextArea jXTextArea1;
    private org.jdesktop.swingx.JXTextField jXTextField1;
    private javax.swing.JCheckBox loyaltyBox;
    public org.jdesktop.swingx.JXTable mainCategoryTbl;
    private org.jdesktop.swingx.JXTextField nameTxt;
    private org.jdesktop.swingx.JXTextField nicTxt;
    private org.jdesktop.swingx.JXButton optionBtn1;
    private org.jdesktop.swingx.JXTable orderDetailsTbl;
    private org.jdesktop.swingx.JXTextField phoneTxt;
    private org.jdesktop.swingx.JXButton removeBtn;
    private org.jdesktop.swingx.JXButton searchBtn;
    public static javax.swing.JTextField searchText;
    private javax.swing.JLabel serviceChaLbl;
    private javax.swing.JCheckBox statusBox;
    public org.jdesktop.swingx.JXTable subCategoryTbl;
    private javax.swing.JLabel subTotLbl;
    // End of variables declaration//GEN-END:variables
    
    public void loadSubCategory(int subCategories) {

        try {
            //
            int rowCount = subCategoryTb.getRowCount();
            //Remove rows one by one from the end of the table
            for (int i = rowCount - 1; i >= 0; i--) {
                subCategoryTb.removeRow(i);
            }
            boolean isInserted = false;
            Object singleItem[] = new Object[10];
            int insertIndex = 0;

            ArrayList<SubItemCategoryDto> subItemCategoryDtos = subItemCategoryController.getSubItemCategories(subCategories);
            for (int i = 0; i < subItemCategoryDtos.size(); i++) {
                SubItemCategoryDto subItemCategoryDto = subItemCategoryDtos.get(i);
                //
                String itemDisplayName = subItemCategoryDto.getSubCategoryName();
                int idItemSelected = (int) subItemCategoryDto.getSubItemCategoryId();
                //          
                singleItem[insertIndex] = itemDisplayName;
                singleItem[insertIndex + 1] = idItemSelected;
                //
                if (insertIndex == 8) {
                    // insert new line
                    isInserted = true;
                    subCategoryTb.addRow(singleItem);
                    //tableModelTrade.insertRow(0, singleItem);
                    insertIndex = -2;
                    singleItem = new Object[10];
                } else {
                    isInserted = false;
                }
                insertIndex += 2;
            }
            if (isInserted == false) {
                subCategoryTb.addRow(singleItem);
                //tableModelTrade.insertRow(0, singleItem);
                // process final batch
            }
        } catch (Exception ex) {
            Logger.getLogger(Order.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void loadAllItems(int allItems) {
        try {
            int rowCount = allItemsTb.getRowCount();
            //Remove rows one by one from the end of the table
            for (int i = rowCount - 1; i >= 0; i--) {
                allItemsTb.removeRow(i);
            }
            boolean isInserted = false;
            Object singleItem[] = new Object[10];
            int insertIndex = 0;

            ArrayList<MainItemDto> mainItemDtos = mainItemController.searchAllSubItems(allItems);
            for (int i = 0; i < mainItemDtos.size(); i++) {
                MainItemDto mainItemDto = mainItemDtos.get(i);
                //
                String itemDisplayName = mainItemDto.getItemName();
                int idItemSelected = (int) mainItemDto.getItemId();

                singleItem[insertIndex] =itemDisplayName +"\nRs." + mainItemDto.getUnitPrice();
                singleItem[insertIndex + 1] = idItemSelected;
                //
                if (insertIndex == 8) {
                    // insert new line
                    isInserted = true;
                    allItemsTb.addRow(singleItem);
                    //tableModelTrade.insertRow(0, singleItem);
                    insertIndex = -2;
                    singleItem = new Object[10];
                } else {
                    isInserted = false;
                }
                insertIndex += 2;
            }
            if (isInserted == false) {
                allItemsTb.addRow(singleItem);
                //tableModelTrade.insertRow(0, singleItem);
                // process final batch
            }
        } catch (Exception ex) {
            Logger.getLogger(Order.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private double checkQtyToggleButton() {
        double markQty = 1.00;
        // if no toggle alert
//        if (oneBtn.isSelected()) {
//            markQty = 1.00;
//        } else if (twoBtn.isSelected()) {
//            markQty = 2.00;
//        } else if (threeBtn.isSelected()) {
//            markQty = 3.00;
//        } else if (manualBtn.isSelected()) {
//            // manual
//            qtyDialogBox.setLocationRelativeTo(null);
//            qtyDialogBox.setVisible(true);
//            qtyDialogBox.repaint();
//
//        }
        return markQty;
    }

    private void clearAll() {
        nameTxt.setText("");
        nicTxt.setText("");
        phoneTxt.setText("");
        addressTxt.setText("");
        statusBox.setSelected(true);
        loyaltyBox.setSelected(true);
    }

    private void loadDeliveryPerson() {
        try {
            String quary="WHERE employee_designation='Delivery Person' and status=1 and visible=1";
            ArrayList<EmployeeManagementDto> employeeManagementDtos=employeeManagementController.getAllEmployees(quary);
            
            for(EmployeeManagementDto managementDto:employeeManagementDtos){
                deliveryCmb.addItem(managementDto.getName());
                deliveryPersonIds.add(managementDto.getEmployeeId());
            }
        } catch (Exception ex) {
            Logger.getLogger(OnlineOrders.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void loadMainCategory() {
        try {
            int rowCount = mainCategoryTb.getRowCount();
            //Remove rows one by one from the end of the table
            for (int i = rowCount - 1; i >= 0; i--) {
                mainCategoryTb.removeRow(i);
            }
            boolean isInserted = false;
            Object singleItem[] = new Object[10];
            int insertIndex = 0;

            String quary="WHERE status=1 and visible=1";
            ArrayList<MainItemCategoryDto> mainItemCategoryDtos = mainItemCategoryController.getAll(quary);
            for (int i = 0; i < mainItemCategoryDtos.size(); i++) {
                MainItemCategoryDto mainItemCategoryDto = mainItemCategoryDtos.get(i);
                //
                String itemDisplayName = mainItemCategoryDto.getCategoryName();
                int idItemSelected = (int) mainItemCategoryDto.getMainItemCategeryId();
                //          
                singleItem[insertIndex] = itemDisplayName;
                singleItem[insertIndex + 1] = idItemSelected;
                //
                if (insertIndex == 8) {
                    // insert new line
                    isInserted = true;
                    mainCategoryTb.addRow(singleItem);
                    //tableModelSuper.insertRow(0, singleItem);
                    insertIndex = -1;
                    singleItem = new Object[10];
                } else {
                    isInserted = false;
                }
                insertIndex += 2;
            }
            if (isInserted == false) {
                mainCategoryTb.addRow(singleItem);
                // tableModelSuper.insertRow(0, singleItem);
                // process final batch
            }
        } catch (Exception ex) {
            Logger.getLogger(Order.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private Double checkItemAvailability(Integer itemId) {
        Double availableQty=0.00;
        try {
            StockDto stockDto=stockController.searchStock(itemId);
            availableQty=stockDto.getQty();
        } catch (Exception ex) {
            return 0.00;
        }
        return availableQty;
    }
}



